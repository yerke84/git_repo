{"version":3,"sources":["link/link.jsx"],"names":["Link","state","hovered","focused","cn","linkElement","props","checked","linkProps","ref","root","className","disabled","pseudo","size","tabIndex","onClick","handleClick","onFocus","handleFocus","onBlur","handleBlur","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","href","url","target","linkContent","children","icon","text","createElement","event","preventDefault","setState","focus","document","activeElement","blur","Component","propTypes","node","string","oneOf","number","bool","oneOfType","arrayOf","theme","func","defaultProps"],"mappings":";;;;;;;;kEAAA;;;;AAIA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAKMA,I,WAFL,kBAAG,MAAH,C,UACA,4B;;;;;;;;;;;;;;sLAgDGC,K,GAAQ;AACJC,qBAAS,KADL;AAEJC,qBAAS;AAFL,S;;;;;+BAODC,E,EAAI;AAAA;;AACP,gBAAIC,cAAc,KAAKC,KAAL,CAAWC,OAAX,GAAqB,MAArB,GAA8B,GAAhD;;AAEA,gBAAIC,YAAY;AACZC,qBAAK,aAACC,IAAD,EAAU;AAAE,2BAAKA,IAAL,GAAYA,IAAZ;AAAmB,iBADxB;AAEZC,2BAAWP,GAAG;AACVQ,8BAAU,KAAKN,KAAL,CAAWM,QADX;AAEVL,6BAAS,KAAKD,KAAL,CAAWC,OAFV;AAGVM,4BAAQ,KAAKP,KAAL,CAAWO,MAHT;AAIVC,0BAAM,KAAKR,KAAL,CAAWQ,IAJP;AAKVX,6BAAS,KAAKF,KAAL,CAAWE,OALV;AAMVD,6BAAS,KAAKD,KAAL,CAAWC;AANV,iBAAH,CAFC;AAUZa,0BAAU,KAAKT,KAAL,CAAWS,QAVT;AAWZC,yBAAS,KAAKC,WAXF;AAYZC,yBAAS,KAAKC,WAZF;AAaZC,wBAAQ,KAAKC,UAbD;AAcZC,8BAAc,KAAKC,gBAdP;AAeZC,8BAAc,KAAKC;AAfP,aAAhB;;AAkBA,gBAAI,CAAC,KAAKnB,KAAL,CAAWC,OAAhB,EAAyB;AACrBC,0BAAUkB,IAAV,GAAiB,KAAKpB,KAAL,CAAWqB,GAA5B;AACAnB,0BAAUoB,MAAV,GAAmB,KAAKtB,KAAL,CAAWsB,MAA9B;AACH;;AAED,gBAAIC,cAAc,CACd,KAAKvB,KAAL,CAAWwB,QADG,EAEd,KAAKxB,KAAL,CAAWyB,IAAX,IAAmB;AAAA;AAAA,kBAAM,KAAM,MAAZ,EAAqB,WAAY3B,GAAG,MAAH,CAAjC;AACb,qBAAKE,KAAL,CAAWyB;AADE,aAFL,EAKd,KAAKzB,KAAL,CAAW0B,IAAX,IAAmB;AAAA;AAAA,kBAAM,KAAM,MAAZ,EAAqB,WAAY5B,GAAG,MAAH,CAAjC;AACb,qBAAKE,KAAL,CAAW0B;AADE,aALL,CAAlB;;AAUA,mBAAO,gBAAMC,aAAN,CAAoB5B,WAApB,EACHG,SADG,EAEHqB,WAFG,CAAP;AAIH;;;oCAGWK,K,EAAO;AACf,gBAAI,KAAK5B,KAAL,CAAWO,MAAf,EAAuB;AACnBqB,sBAAMC,cAAN;AACH;AACD,gBAAI,KAAK7B,KAAL,CAAWU,OAAf,EAAwB;AACpB,qBAAKV,KAAL,CAAWU,OAAX,CAAmBkB,KAAnB;AACH;AACJ;;;oCAGWA,K,EAAO;AACf,iBAAKE,QAAL,CAAc,EAAEjC,SAAS,IAAX,EAAd;;AAEA,gBAAI,KAAKG,KAAL,CAAWY,OAAf,EAAwB;AACpB,qBAAKZ,KAAL,CAAWY,OAAX,CAAmBgB,KAAnB;AACH;AACJ;;;mCAGUA,K,EAAO;AACd,iBAAKE,QAAL,CAAc,EAAEjC,SAAS,KAAX,EAAd;;AAEA,gBAAI,KAAKG,KAAL,CAAWc,MAAf,EAAuB;AACnB,qBAAKd,KAAL,CAAWc,MAAX,CAAkBc,KAAlB;AACH;AACJ;;;yCAGgBA,K,EAAO;AACpB,iBAAKE,QAAL,CAAc,EAAElC,SAAS,IAAX,EAAd;;AAEA,gBAAI,KAAKI,KAAL,CAAWgB,YAAf,EAA6B;AACzB,qBAAKhB,KAAL,CAAWgB,YAAX,CAAwBY,KAAxB;AACH;AACJ;;;yCAGgBA,K,EAAO;AACpB,iBAAKE,QAAL,CAAc,EAAElC,SAAS,KAAX,EAAd;;AAEA,gBAAI,KAAKI,KAAL,CAAWkB,YAAf,EAA6B;AACzB,qBAAKlB,KAAL,CAAWkB,YAAX,CAAwBU,KAAxB;AACH;AACJ;;AAED;;;;;;;;;kCAMU;AACN,mBAAO,KAAKxB,IAAZ;AACH;;AAED;;;;;;;;gCAKQ;AACJ,iBAAKA,IAAL,CAAU2B,KAAV;AACH;;AAED;;;;;;;;+BAKO;AACH,gBAAIC,SAASC,aAAb,EAA4B;AACxBD,yBAASC,aAAT,CAAuBC,IAAvB;AACH;AACJ;;;;EA1Kc,gBAAMC,S,WACdC,S,GAAY;AACf;AACAX,UAAM,oBAAKY,IAFI;AAGf;AACAX,UAAM,oBAAKW,IAJI;AAKf;AACAhB,SAAK,oBAAKiB,MANK;AAOf;AACAhB,YAAQ,oBAAKiB,KAAL,CAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,EAA+B,MAA/B,CAAX,CARO;AASf;AACA9B,cAAU,oBAAK+B,MAVA;AAWf;AACAlC,cAAU,oBAAKmC,IAZA;AAaf;AACAxC,aAAS,oBAAKwC,IAdC;AAef;AACAlC,YAAQ,oBAAKkC,IAhBE;AAiBf;AACAjC,UAAM,oBAAK+B,KAAL,CAAW,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,CAAX,CAlBS;AAmBf;AACAf,cAAU,oBAAKkB,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKN,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CApBK;AAqBf;AACAO,WAAO,oBAAKL,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAtBQ;AAuBf;AACAlC,eAAW,oBAAKqC,SAAL,CAAe,CAAC,oBAAKG,IAAN,EAAY,oBAAKP,MAAjB,CAAf,CAxBI;AAyBf;AACA5B,aAAS,oBAAKmC,IA1BC;AA2Bf;AACAjC,aAAS,oBAAKiC,IA5BC;AA6Bf;AACA/B,YAAQ,oBAAK+B,IA9BE;AA+Bf;AACA7B,kBAAc,oBAAK6B,IAhCJ;AAiCf;AACA3B,kBAAc,oBAAK2B;AAlCJ,C,UAqCZC,Y,GAAe;AAClBtC,UAAM,GADY;AAElBa,SAAK,GAFa;AAGlBZ,cAAU,CAHQ;AAIlBH,cAAU,KAJQ;AAKlBL,aAAS,KALS;AAMlBM,YAAQ;AANU,C;kBAuIXb,I","file":"link.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент ссылки.\n */\n@cn('link')\n@performance()\nclass Link extends React.Component {\n    static propTypes = {\n        /** Иконка ссылки */\n        icon: Type.node,\n        /** Текст ссылки */\n        text: Type.node,\n        /** href ссылки */\n        url: Type.string,\n        /** target ссылки */\n        target: Type.oneOf(['_self', '_blank', '_parent', '_top']),\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Управление возможностью клика по ссылке */\n        disabled: Type.bool,\n        /** Управление состоянием ссылки выбран/не выбран */\n        checked: Type.bool,\n        /** Псевдо-ссылка (border-bottom: dotted) */\n        pseudo: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['xs', 's', 'm', 'l', 'xl']),\n        /** Дочерние элементы `Link` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик клика но ссылке */\n        onClick: Type.func,\n        /** Обработчик фокуса компонента */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса компонента */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на ссылку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с ссылки */\n        onMouseLeave: Type.func\n    };\n\n    static defaultProps = {\n        size: 'm',\n        url: '#',\n        tabIndex: 0,\n        disabled: false,\n        checked: false,\n        pseudo: false\n    };\n\n    state = {\n        hovered: false,\n        focused: false\n    };\n\n    root;\n\n    render(cn) {\n        let linkElement = this.props.checked ? 'span' : 'a';\n\n        let linkProps = {\n            ref: (root) => { this.root = root; },\n            className: cn({\n                disabled: this.props.disabled,\n                checked: this.props.checked,\n                pseudo: this.props.pseudo,\n                size: this.props.size,\n                focused: this.state.focused,\n                hovered: this.state.hovered\n            }),\n            tabIndex: this.props.tabIndex,\n            onClick: this.handleClick,\n            onFocus: this.handleFocus,\n            onBlur: this.handleBlur,\n            onMouseEnter: this.handleMouseEnter,\n            onMouseLeave: this.handleMouseLeave\n        };\n\n        if (!this.props.checked) {\n            linkProps.href = this.props.url;\n            linkProps.target = this.props.target;\n        }\n\n        let linkContent = [\n            this.props.children,\n            this.props.icon && <span key={ 'icon' } className={ cn('icon') }>\n                { this.props.icon }\n            </span>,\n            this.props.text && <span key={ 'text' } className={ cn('text') }>\n                { this.props.text }\n            </span>\n        ];\n\n        return React.createElement(linkElement,\n            linkProps,\n            linkContent\n        );\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.pseudo) {\n            event.preventDefault();\n        }\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.root;\n    }\n\n    /**\n     * Ставит фокус на ссылку.\n     *\n     * @public\n     */\n    focus() {\n        this.root.focus();\n    }\n\n    /**\n     * Убирает фокус с ссылки.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default Link;\n"]}