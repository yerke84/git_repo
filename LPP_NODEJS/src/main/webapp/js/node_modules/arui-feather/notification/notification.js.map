{"version":3,"sources":["notification/notification.jsx"],"names":["Notification","state","hovered","closeTimeout","clickEventBindTimeout","isWindowClickBinded","startCloseTimer","props","outsideClickClosable","ensureClickEvent","prevProps","onClickOutside","visible","stopCloseTimer","cn","status","stickTo","handleMouseEnter","handleMouseLeave","handleClick","getPosition","root","icon","title","children","hasCloser","handleCloserClick","onCloserClick","event","setState","onMouseEnter","onMouseLeave","onClick","top","offset","setTimeout","onCloseTimeout","autoCloseDelay","clearTimeout","isDestroy","isNeedBindEvent","undefined","window","addEventListener","handleWindowClick","removeEventListener","Component","propTypes","oneOf","bool","number","oneOfType","arrayOf","node","theme","className","func","string","defaultProps"],"mappings":";;;;;;;;kEAAA;;;;AAIA;;AAEA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAKMA,Y,WAFL,kBAAG,cAAH,C,UACA,4B;;;;;;;;;;;;;;sMAgDGC,K,GAAQ;AACJC,qBAAS;AADL,S,QAMRC,Y,GAAe,I,QACfC,qB,GAAwB,I,QACxBC,mB,GAAsB,K;;;;;4CAEF;AAChB,iBAAKC,eAAL;;AAEA,gBAAI,KAAKC,KAAL,CAAWC,oBAAf,EAAqC;AACjC,qBAAKC,gBAAL;AACH;AACJ;;;2CAEkBC,S,EAAW;AAC1B,gBAAI,KAAKH,KAAL,CAAWC,oBAAf,EAAqC;AACjC,oBAAIE,UAAUC,cAAV,KAA6B,KAAKJ,KAAL,CAAWI,cAA5C,EAA4D;AACxD,yBAAKF,gBAAL;AACH,iBAFD,MAEO,IAAIC,UAAUE,OAAV,KAAsB,KAAKL,KAAL,CAAWK,OAArC,EAA8C;AACjD,yBAAKH,gBAAL,CAAsB,CAAC,KAAKF,KAAL,CAAWK,OAAlC;AACH;AACJ;AACJ;;;+CAEsB;AACnB,iBAAKC,cAAL;;AAEA,gBAAI,KAAKN,KAAL,CAAWC,oBAAf,EAAqC;AACjC,qBAAKC,gBAAL,CAAsB,IAAtB;AACH;AACJ;;;+BAEMK,E,EAAI;AAAA;;AACP,mBACI;AAAA;AAAA;AACI,+BAAYA,GAAG;AACXF,iCAAS,KAAKL,KAAL,CAAWK,OADT;AAEXG,gCAAQ,KAAKR,KAAL,CAAWQ,MAFR;AAGXb,iCAAS,KAAKD,KAAL,CAAWC,OAHT;AAIX,oCAAY,KAAKK,KAAL,CAAWS;AAJZ,qBAAH,CADhB;AAOI,kCAAe,KAAKC,gBAPxB;AAQI,kCAAe,KAAKC,gBARxB;AASI,6BAAU,KAAKC,WATnB;AAUI,2BAAQ,KAAKC,WAAL,EAVZ;AAWI,yBAAM,aAACC,IAAD,EAAU;AAAE,+BAAKA,IAAL,GAAYA,IAAZ;AAAmB;AAXzC;AAaI;AAAA;AAAA,sBAAK,WAAYP,GAAG,MAAH,CAAjB;AAEQ,yBAAKP,KAAL,CAAWe,IAAX,IACA;AACI,+BAAM,iBADV;AAEI,8BAAO,KAAKf,KAAL,CAAWQ,MAFtB;AAGI,8BAAK;AAHT;AAHR,iBAbJ;AAuBM,qBAAKR,KAAL,CAAWgB,KAAX,IACE;AAAA;AAAA,sBAAK,WAAYT,GAAG,OAAH,CAAjB;AACM,yBAAKP,KAAL,CAAWgB;AADjB,iBAxBR;AA4BI;AAAA;AAAA,sBAAK,WAAYT,GAAG,SAAH,CAAjB;AACI;AAAA;AAAA,0BAAS,WAAYA,GAAG,SAAH,CAArB;AACM,6BAAKP,KAAL,CAAWiB;AADjB;AADJ,iBA5BJ;AAkCQ,qBAAKjB,KAAL,CAAWkB,SAAX,IACA;AACI,+BAAYX,GAAG,OAAH,CADhB;AAEI,0BAAK,GAFT;AAGI,0BAAK,OAHT;AAII,6BAAU,KAAKY;AAJnB;AAnCR,aADJ;AA6CH;;;4CAGmB;AAChB,gBAAI,KAAKnB,KAAL,CAAWoB,aAAf,EAA8B;AAC1B,qBAAKpB,KAAL,CAAWoB,aAAX;AACH;AACJ;;;yCAGgBC,K,EAAO;AACpB,iBAAKC,QAAL,CAAc,EAAE3B,SAAS,IAAX,EAAd;AACA,iBAAKW,cAAL;;AAEA,gBAAI,KAAKN,KAAL,CAAWuB,YAAf,EAA6B;AACzB,qBAAKvB,KAAL,CAAWuB,YAAX,CAAwBF,KAAxB;AACH;AACJ;;;yCAGgBA,K,EAAO;AACpB,iBAAKC,QAAL,CAAc,EAAE3B,SAAS,KAAX,EAAd;AACA,iBAAKW,cAAL;AACA,iBAAKP,eAAL;;AAEA,gBAAI,KAAKC,KAAL,CAAWwB,YAAf,EAA6B;AACzB,qBAAKxB,KAAL,CAAWwB,YAAX,CAAwBH,KAAxB;AACH;AACJ;;;oCAGWA,K,EAAO;AACf,gBAAI,KAAKrB,KAAL,CAAWyB,OAAf,EAAwB;AACpB,qBAAKzB,KAAL,CAAWyB,OAAX,CAAmBJ,KAAnB;AACH;AACJ;;;0CAGiBA,K,EAAO;AACrB,gBAAI,KAAKrB,KAAL,CAAWC,oBAAX,IAAmC,KAAKa,IAAxC,IACA,wCAA2BO,KAA3B,EAAkC,KAAKP,IAAvC,CADJ,EACkD;AAC9C,oBAAI,KAAKd,KAAL,CAAWI,cAAf,EAA+B;AAC3B,yBAAKJ,KAAL,CAAWI,cAAX,CAA0BiB,KAA1B;AACH;AACJ;AACJ;;;sCAEa;AACV,mBAAO,EAAEK,KAAK,KAAK1B,KAAL,CAAW2B,MAAlB,EAAP;AACH;;;0CAEiB;AAAA;;AACd,iBAAK/B,YAAL,GAAoBgC,WAAW,YAAM;AACjC,oBAAI,OAAK5B,KAAL,CAAW6B,cAAf,EAA+B;AAC3B,2BAAK7B,KAAL,CAAW6B,cAAX;AACH;AACJ,aAJmB,EAIjB,KAAK7B,KAAL,CAAW8B,cAJM,CAApB;AAKH;;;yCAEgB;AACbC,yBAAa,KAAKnC,YAAlB;AACA,iBAAKA,YAAL,GAAoB,IAApB;AACH;;;yCAEgBoC,S,EAAW;AAAA;;AACxB,gBAAIC,kBAAkBD,cAAcE,SAAd,GAA0B,CAACF,SAA3B,GAAuC,KAAKhC,KAAL,CAAWK,OAAxE;;AAEA;AACA;AACA,gBAAI,KAAKR,qBAAT,EAAgC;AAC5BkC,6BAAa,KAAKlC,qBAAlB;AACA,qBAAKA,qBAAL,GAA6B,IAA7B;AACH;;AAED,iBAAKA,qBAAL,GAA6B+B,WAAW,YAAM;AAC1C,oBAAI,CAAC,OAAK9B,mBAAN,IAA6BmC,eAAjC,EAAkD;AAC9CE,2BAAOC,gBAAP,CAAwB,OAAxB,EAAiC,OAAKC,iBAAtC;AACA,2BAAKvC,mBAAL,GAA2B,IAA3B;AACH,iBAHD,MAGO,IAAI,OAAKA,mBAAL,IAA4B,CAACmC,eAAjC,EAAkD;AACrDE,2BAAOG,mBAAP,CAA2B,OAA3B,EAAoC,OAAKD,iBAAzC;AACA,2BAAKvC,mBAAL,GAA2B,KAA3B;AACH;AACJ,aAR4B,EAQ1B,CAR0B,CAA7B;AASH;;;;EApNsB,gBAAMyC,S,WACtBC,S,GAAY;AACf;AACAhC,YAAQ,oBAAKiC,KAAL,CAAW,CAAC,OAAD,EAAU,MAAV,EAAkB,IAAlB,CAAX,CAFO;AAGf;AACApC,aAAS,oBAAKqC,IAJC;AAKf;AACAf,YAAQ,oBAAKgB,MANE;AAOf;AACAlC,aAAS,oBAAKgC,KAAL,CAAW,CAAC,MAAD,EAAS,OAAT,CAAX,CARM;AASf;AACAvB,eAAW,oBAAKwB,IAVD;AAWf;AACAzB,cAAU,oBAAK2B,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CAZK;AAaf;AACAC,WAAO,oBAAKN,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAdQ;AAef;AACAO,eAAW,oBAAKJ,SAAL,CAAe,CAAC,oBAAKK,IAAN,EAAY,oBAAKC,MAAjB,CAAf,CAhBI;AAiBf;AACAlC,WAAO,oBAAK8B,IAlBG;AAmBf;AACA/B,UAAM,oBAAK+B,IApBI;AAqBf;AACAhB,oBAAgB,oBAAKa,MAtBN;AAuBf;AACA1C,0BAAsB,oBAAKyC,IAxBZ;AAyBf;AACAb,oBAAgB,oBAAKoB,IA1BN;AA2Bf;AACA7B,mBAAe,oBAAK6B,IA5BL;AA6Bf;AACA1B,kBAAc,oBAAK0B,IA9BJ;AA+Bf;AACAzB,kBAAc,oBAAKyB,IAhCJ;AAiCf;AACA7C,oBAAgB,oBAAK6C,IAlCN;AAmCf;AACAxB,aAAS,oBAAKwB;AApCC,C,UAuCZE,Y,GAAe;AAClBrB,oBAAgB,IADE;AAElBrB,aAAS,MAFS;AAGlBkB,YAAQ,CAHU;AAIlBT,eAAW;AAJO,C;kBA+KXzB,Y","file":"notification.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Icon from '../icon/icon';\nimport Message from '../message/message';\n\nimport cn from '../cn';\nimport { isEventOutsideClientBounds } from '../lib/window';\nimport performance from '../performance';\n\n/**\n * Компонент всплывающего окна.\n */\n@cn('notification')\n@performance()\nclass Notification extends React.Component {\n    static propTypes = {\n        /** Тип компонента */\n        status: Type.oneOf(['error', 'fail', 'ok']),\n        /** Управление видимостью компонента */\n        visible: Type.bool,\n        /** Отступ от верхнего края */\n        offset: Type.number,\n        /** К какому краю прижат попап */\n        stickTo: Type.oneOf(['left', 'right']),\n        /** Управляет отображением кнопки закрытия уведомления */\n        hasCloser: Type.bool,\n        /** Дочерние элементы `Notification` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Заголовок сообщения */\n        title: Type.node,\n        /** Замена стандартной иконки */\n        icon: Type.node,\n        /** Время до закрытия компонента */\n        autoCloseDelay: Type.number,\n        /** Управление возможностью закрытия компонента по клику вне его */\n        outsideClickClosable: Type.bool,\n        /** Обработчик события истечения времени до закрытия компонента */\n        onCloseTimeout: Type.func,\n        /** Обработчик клика по крестику компонента */\n        onCloserClick: Type.func,\n        /** Обработчик события наведения курсора на попап */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с попапа */\n        onMouseLeave: Type.func,\n        /** Обработчик клика вне компонента */\n        onClickOutside: Type.func,\n        /** Обработчик клика по компоненту */\n        onClick: Type.func\n    };\n\n    static defaultProps = {\n        autoCloseDelay: 5000,\n        stickTo: 'left',\n        offset: 0,\n        hasCloser: true\n    };\n\n    state = {\n        hovered: false\n    };\n\n    root;\n\n    closeTimeout = null;\n    clickEventBindTimeout = null;\n    isWindowClickBinded = false;\n\n    componentDidMount() {\n        this.startCloseTimer();\n\n        if (this.props.outsideClickClosable) {\n            this.ensureClickEvent();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.outsideClickClosable) {\n            if (prevProps.onClickOutside !== this.props.onClickOutside) {\n                this.ensureClickEvent();\n            } else if (prevProps.visible !== this.props.visible) {\n                this.ensureClickEvent(!this.props.visible);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopCloseTimer();\n\n        if (this.props.outsideClickClosable) {\n            this.ensureClickEvent(true);\n        }\n    }\n\n    render(cn) {\n        return (\n            <div\n                className={ cn({\n                    visible: this.props.visible,\n                    status: this.props.status,\n                    hovered: this.state.hovered,\n                    'stick-to': this.props.stickTo\n                }) }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                onClick={ this.handleClick }\n                style={ this.getPosition() }\n                ref={ (root) => { this.root = root; } }\n            >\n                <div className={ cn('icon') }>\n                    {\n                        this.props.icon ||\n                        <Icon\n                            theme='alfa-on-colored'\n                            icon={ this.props.status }\n                            size='m'\n                        />\n                    }\n                </div>\n                { this.props.title &&\n                    <div className={ cn('title') }>\n                        { this.props.title }\n                    </div>\n                }\n                <div className={ cn('content') }>\n                    <Message className={ cn('message') }>\n                        { this.props.children }\n                    </Message>\n                </div>\n                {\n                    this.props.hasCloser &&\n                    <Icon\n                        className={ cn('close') }\n                        size='m'\n                        icon='close'\n                        onClick={ this.handleCloserClick }\n                    />\n                }\n            </div>\n        );\n    }\n\n    @autobind\n    handleCloserClick() {\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick();\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        this.setState({ hovered: true });\n        this.stopCloseTimer();\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        this.setState({ hovered: false });\n        this.stopCloseTimer();\n        this.startCloseTimer();\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleWindowClick(event) {\n        if (this.props.outsideClickClosable && this.root &&\n            isEventOutsideClientBounds(event, this.root)) {\n            if (this.props.onClickOutside) {\n                this.props.onClickOutside(event);\n            }\n        }\n    }\n\n    getPosition() {\n        return { top: this.props.offset };\n    }\n\n    startCloseTimer() {\n        this.closeTimeout = setTimeout(() => {\n            if (this.props.onCloseTimeout) {\n                this.props.onCloseTimeout();\n            }\n        }, this.props.autoCloseDelay);\n    }\n\n    stopCloseTimer() {\n        clearTimeout(this.closeTimeout);\n        this.closeTimeout = null;\n    }\n\n    ensureClickEvent(isDestroy) {\n        let isNeedBindEvent = isDestroy !== undefined ? !isDestroy : this.props.visible;\n\n        // We need timeouts to not to catch the event that causes\n        // popup opening (because it propagates to the `window`).\n        if (this.clickEventBindTimeout) {\n            clearTimeout(this.clickEventBindTimeout);\n            this.clickEventBindTimeout = null;\n        }\n\n        this.clickEventBindTimeout = setTimeout(() => {\n            if (!this.isWindowClickBinded && isNeedBindEvent) {\n                window.addEventListener('click', this.handleWindowClick);\n                this.isWindowClickBinded = true;\n            } else if (this.isWindowClickBinded && !isNeedBindEvent) {\n                window.removeEventListener('click', this.handleWindowClick);\n                this.isWindowClickBinded = false;\n            }\n        }, 0);\n    }\n}\n\nexport default Notification;\n"]}