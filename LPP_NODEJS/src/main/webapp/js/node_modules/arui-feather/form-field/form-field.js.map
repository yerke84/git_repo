{"version":3,"sources":["form-field/form-field.jsx"],"names":["FormField","cn","size","props","view","label","children","Component","propTypes","oneOfType","arrayOf","node","oneOf","string","theme","className","func","defaultProps"],"mappings":";;;;;;;;yCAAA;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA;;;;IAMMA,S,WAFL,kBAAG,YAAH,C,UACA,4B;;;;;;;;;;;+BAqBUC,E,EAAI;AACP,mBACI;AAAA;AAAA;AACI,+BAAYA,GAAG;AACXC,8BAAM,KAAKC,KAAL,CAAWD,IADN;AAEXE,8BAAM,KAAKD,KAAL,CAAWC;AAFN,qBAAH;AADhB;AAMM,qBAAKD,KAAL,CAAWE,KAAX,IACE;AAAA;AAAA,sBAAK,WAAYJ,GAAG,OAAH,CAAjB;AACM,yBAAKE,KAAL,CAAWE;AADjB,iBAPR;AAWI;AAAA;AAAA,sBAAK,WAAYJ,GAAG,SAAH,CAAjB;AACM,yBAAKE,KAAL,CAAWG;AADjB;AAXJ,aADJ;AAiBH;;;;EAtCmB,gBAAMC,S,WACnBC,S,GAAY;AACf;AACAF,cAAU,oBAAKG,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CAFK;AAGf;AACAN,WAAO,oBAAKM,IAJG;AAKf;AACAT,UAAM,oBAAKU,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CANS;AAOf;AACAR,UAAM,oBAAKS,MARI;AASf;AACAC,WAAO,oBAAKF,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAVQ;AAWf;AACAG,eAAW,oBAAKN,SAAL,CAAe,CAAC,oBAAKO,IAAN,EAAY,oBAAKH,MAAjB,CAAf;AAZI,C,UAeZI,Y,GAAe;AAClBf,UAAM;AADY,C;kBAyBXF,S","file":"form-field.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент поля формы: cодержит заголовок контрола и сам контрол.\n * Контрол должен быть передан дочерним компонентов.\n */\n@cn('form-field')\n@performance()\nclass FormField extends React.Component {\n    static propTypes = {\n        /** Дочерние элементы `FormField` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Заголовок для контрола */\n        label: Type.node,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Расположение элемента label: 'line' */\n        view: Type.string,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string])\n    };\n\n    static defaultProps = {\n        size: 'm'\n    };\n\n    render(cn) {\n        return (\n            <div\n                className={ cn({\n                    size: this.props.size,\n                    view: this.props.view\n                }) }\n            >\n                { this.props.label &&\n                    <div className={ cn('label') }>\n                        { this.props.label }\n                    </div>\n                }\n                <div className={ cn('control') }>\n                    { this.props.children }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FormField;\n"]}