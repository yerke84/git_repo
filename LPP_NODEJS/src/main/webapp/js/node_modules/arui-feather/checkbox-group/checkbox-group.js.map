{"version":3,"sources":["checkbox-group/checkbox-group.jsx"],"names":["CheckBoxGroup","cn","children","checkboxGroupParts","props","length","forEach","checkbox","index","type","Component","propTypes","oneOf","oneOfType","arrayOf","node","theme","className","func","string"],"mappings":";;;;;;;;yCAAA;;;;AAIA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA;;;IAKMA,a,WAFL,kBAAG,gBAAH,C,UACA,4B;;;;;;;;;;;+BAaUC,E,EAAI;AAAA;;AACP,gBAAIC,WAAW,IAAf;AACA,gBAAIC,qBAAqB,EAAzB;;AAEA,gBAAI,KAAKC,KAAL,CAAWF,QAAf,EAAyB;AACrBA,2BAAW,KAAKE,KAAL,CAAWF,QAAX,CAAoBG,MAApB,GAA6B,KAAKD,KAAL,CAAWF,QAAxC,GAAmD,CAAC,KAAKE,KAAL,CAAWF,QAAZ,CAA9D;AACH;;AAED,gBAAIA,QAAJ,EAAc;AACVA,yBAASI,OAAT,CAAiB,UAACC,QAAD,EAAWC,KAAX,EAAqB;AAClCL,qDAA+BK,KAA/B,IACK,OAAKJ,KAAL,CAAWK,IAAX,KAAoB,QAApB,IAAgC,OAAKL,KAAL,CAAWK,IAAX,KAAoB,MAArD,GACM;AAAA;AAAA;AAAOF;AAAP,qBADN,GAEMA,QAHV;AAIH,iBALD;AAMH;;AAED,mBACI;AAAA;AAAA;AACI,+BAAeN,GAAG,EAAEQ,MAAM,KAAKL,KAAL,CAAWK,IAAnB,EAAH,CAAf,mBADJ;AAEI,0BAAK,OAFT;AAGI,8BAAS;AAHb;AAKM,yDAAeN,kBAAf;AALN,aADJ;AASH;;;;EAtCuB,gBAAMO,S,WACvBC,S,GAAY;AACf;AACAF,UAAM,oBAAKG,KAAL,CAAW,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAX,CAFS;AAGf;AACAV,cAAU,oBAAKW,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CAJK;AAKf;AACAC,WAAO,oBAAKJ,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CANQ;AAOf;AACAK,eAAW,oBAAKJ,SAAL,CAAe,CAAC,oBAAKK,IAAN,EAAY,oBAAKC,MAAjB,CAAf;AARI,C;kBAwCRnB,a","file":"checkbox-group.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport createFragment from 'react-addons-create-fragment';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент группы чекбоксов.\n */\n@cn('checkbox-group')\n@performance()\nclass CheckBoxGroup extends React.Component {\n    static propTypes = {\n        /** Тип компонента */\n        type: Type.oneOf(['normal', 'button', 'line']),\n        /** Дочерние элементы `CheckBoxGroup`, как правило, компоненты `CheckBox` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string])\n    };\n\n    render(cn) {\n        let children = null;\n        let checkboxGroupParts = {};\n\n        if (this.props.children) {\n            children = this.props.children.length ? this.props.children : [this.props.children];\n        }\n\n        if (children) {\n            children.forEach((checkbox, index) => {\n                checkboxGroupParts[`checkbox-${index}`] =\n                    (this.props.type !== 'button' && this.props.type !== 'line')\n                        ? <div>{ checkbox }</div>\n                        : checkbox;\n            });\n        }\n\n        return (\n            <span\n                className={ `${cn({ type: this.props.type })} control-group` }\n                role='group'\n                tabIndex='-1'\n            >\n                { createFragment(checkboxGroupParts) }\n            </span>\n        );\n    }\n}\n\nexport default CheckBoxGroup;\n"]}