{"version":3,"sources":["amount/amount.jsx"],"names":["AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR","AMOUNT_MAJOR_PART_SIZE","ZERO_MINOR_PART_REGEXP","MINUS_SIGN_HTML_CODE","createSplitter","partSize","parts","str","length","from","to","slice","concat","formatAmount","amount","value","currency","minority","code","fractionDigits","Math","log","LN10","isNegative","valueAbs","abs","valueAbsStr","toFixed","numberParts","split","majorPart","minorPart","amountSplitter","majorPartFormatted","reverse","join","formattedValueStr","currencySymbol","Amount","cn","props","size","amountInner","renderSeparatorAndMinorPart","renderCurrencySymbol","isHeading","showZeroMinorPart","needMinorPart","test","Component","propTypes","shape","number","string","isRequired","bool","oneOf","theme","className","oneOfType","func","defaultProps"],"mappings":"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","file":"amount.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Heading from '../heading/heading';\nimport Label from '../label/label';\n\nimport cn from '../cn';\nimport { getCurrencySymbol } from '../lib/currency-codes';\nimport performance from '../performance';\n\nconst AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR = ',';\nconst AMOUNT_MAJOR_PART_SIZE = 3;\nconst ZERO_MINOR_PART_REGEXP = /^0+$/;\nconst MINUS_SIGN_HTML_CODE = '\\u2212';\n\nfunction createSplitter(partSize) {\n    let parts = function (str) {\n        let length = str.length;\n\n        if (length <= partSize) {\n            return [str];\n        }\n\n        let from = length - partSize;\n        let to = length;\n\n        return [str.slice(from, to)].concat(parts(str.slice(0, from)));\n    };\n    return parts;\n}\n\nfunction formatAmount(amount) {\n    let {\n        value,\n        currency: {\n            minority,\n            code\n        }\n    } = amount;\n    let fractionDigits = Math.log(minority) / Math.LN10;\n\n    let isNegative = value < 0;\n\n    let valueAbs = Math.abs(value);\n\n    let valueAbsStr = (valueAbs / minority).toFixed(fractionDigits);\n\n    let numberParts = valueAbsStr.split('.');\n    let majorPart = numberParts[0];\n    let minorPart = numberParts[1];\n\n    let amountSplitter = createSplitter(AMOUNT_MAJOR_PART_SIZE);\n\n    let majorPartFormatted = amountSplitter(majorPart).reverse().join(' ');\n    let formattedValueStr = majorPartFormatted + (minorPart ? `,${minorPart}` : '');\n\n    return {\n        majorPart: majorPartFormatted,\n        minorPart,\n        value: formattedValueStr,\n        isNegative,\n        currencySymbol: getCurrencySymbol(code)\n    };\n}\n\n/**\n * Компонент для отображения суммы.\n */\n@cn('amount')\n@performance(true)\nclass Amount extends React.Component {\n    static propTypes = {\n        amount: Type.shape({\n            /** Абсолютное значение суммы */\n            value: Type.number,\n            /** Валюта */\n            currency: Type.shape({\n                /** Международный код валюты */\n                code: Type.string,\n                /** Количество минорных единиц валюты */\n                minority: Type.number\n            })\n        }).isRequired,\n        /** Отображение минорной части, если она нулевая */\n        showZeroMinorPart: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Использовать компонент `Heading` для вывода числа */\n        isHeading: Type.bool,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string])\n    };\n\n    static defaultProps = {\n        size: 'm',\n        showZeroMinorPart: true,\n        isHeading: false\n    };\n\n    render(cn) {\n        let { amount, size } = this.props;\n        let { majorPart, minorPart, isNegative, currencySymbol } = formatAmount(amount);\n        let amountInner = (\n            <span>\n                <span className={ cn('major') }>\n                    { isNegative && MINUS_SIGN_HTML_CODE }\n                    { majorPart }\n                </span>\n                { this.renderSeparatorAndMinorPart(cn, minorPart) }\n                { this.renderCurrencySymbol(cn, currencySymbol) }\n            </span>\n        );\n\n        return (\n            <div className={ cn }>\n                {\n                    this.props.isHeading\n                        ? <Heading size={ size }>\n                            { amountInner }\n                        </Heading>\n                        : <Label size={ size }>\n                            { amountInner }\n                        </Label>\n                }\n            </div>\n        );\n    }\n\n    renderSeparatorAndMinorPart(cn, minorPart) {\n        let { showZeroMinorPart } = this.props;\n\n        let needMinorPart = false;\n\n        if (minorPart) {\n            needMinorPart = true;\n\n            if (!showZeroMinorPart && ZERO_MINOR_PART_REGEXP.test(minorPart)) {\n                needMinorPart = false;\n            }\n        }\n\n        if (needMinorPart) {\n            return (\n                <div className={ cn('minor-container') }>\n                    <span className={ cn('separator') } >{ AMOUNT_MAJOR_MINOR_PARTS_SEPARATOR }</span>\n                    <span className={ cn('minor') } >{ minorPart }</span>\n                </div>\n            );\n        }\n        return null;\n    }\n\n    renderCurrencySymbol(cn, currencySymbol) {\n        return (\n            <span className={ cn('currency') } >\n                { ` ${currencySymbol}` }\n            </span>\n        );\n    }\n}\n\nexport default Amount;\n"]}