{"version":3,"sources":["dropdown/dropdown.jsx"],"names":["Dropdown","state","opened","switcherHovered","popupHovered","popup","setTarget","switcher","getNode","cn","renderSwitcher","renderPopup","content","props","children","switcherText","undefined","switcherType","renderSwitcherButton","renderSwitcherLink","size","disabled","togglable","handleSwitcherClick","handleSwitcherMouseEnter","handleSwitcherMouseLeave","popupProps","className","autoclosable","mode","handlePopupMouseEnter","handlePopupMouseLeave","handlePopupClickOutside","popupContent","newOpenedStatusValue","setState","onSwitcherClick","onSwitcherMouseEnter","onSwitcherMouseLeave","onPopupMouseEnter","onPopupMouseLeave","onPopupClickOutside","Component","propTypes","oneOf","node","shape","oneOfType","func","string","type","height","directions","arrayOf","target","mainOffset","number","secondaryOffset","fitContaiterOffset","invalid","bool","visible","padded","theme","onMouseEnter","onMouseLeave","onClickOutside","minWidth","maxWidth","defaultProps"],"mappings":"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","file":"dropdown.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Button from '../button/button';\nimport Link from '../link/link';\nimport Popup from '../popup/popup';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент \"выпадашка\": ссылка или кнопка. По клику показывается Popup.\n */\n@cn('dropdown')\n@performance()\nclass Dropdown extends React.Component {\n    static propTypes = {\n        /** Тип компонента */\n        switcherType: Type.oneOf(['link', 'button']),\n        /** Текст кнопки компонента */\n        switcherText: Type.node,\n        /** Компонент [Popup](../popup/) */\n        popupContent: Type.node,\n        /** Свойства для компонента [Popup](../popup/) */\n        popupProps: Type.shape({\n            className: Type.oneOfType([Type.func, Type.string]),\n            type: Type.oneOf(['default', 'tooltip']),\n            height: Type.oneOf(['default', 'available', 'adaptive']),\n            directions: Type.arrayOf(Type.oneOf([\n                'anchor', 'top-left', 'top-center', 'top-right', 'left-top', 'left-center', 'left-bottom', 'right-top',\n                'right-center', 'right-bottom', 'bottom-left', 'bottom-center', 'bottom-right'\n            ])),\n            target: Type.oneOf(['anchor', 'position']),\n            mainOffset: Type.number,\n            secondaryOffset: Type.number,\n            fitContaiterOffset: Type.number,\n            invalid: Type.bool,\n            visible: Type.bool,\n            autoclosable: Type.bool,\n            padded: Type.bool,\n            size: Type.oneOf(['s', 'm', 'l', 'xl']),\n            theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n            onMouseEnter: Type.func,\n            onMouseLeave: Type.func,\n            onClickOutside: Type.func,\n            minWidth: Type.number,\n            maxWidth: Type.number\n        }),\n        /** Управление возможностью отображать попап при наведении курсора */\n        mode: Type.oneOf(['hover', 'normal']),\n        /** Управление возможностью открытия попапа */\n        disabled: Type.bool,\n        /** Управление состоянием открыт/закрыт попапа */\n        opened: Type.bool,\n        /** Только для switcherType='button'. Тип переключателя для кнопки, 'check' */\n        togglable: Type.oneOf(['button', 'check']),\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Дочерние элементы `Dropdown` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик клика по кнопке компонента */\n        onSwitcherClick: Type.func,\n        /** Обработчик события наведения курсора на кнопку компонента */\n        onSwitcherMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с кнопки компонента */\n        onSwitcherMouseLeave: Type.func,\n        /** Обработчик события наведения курсора на попап */\n        onPopupMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с попапа */\n        onPopupMouseLeave: Type.func,\n        /** Обработчик события клика попапа за пределами попапа */\n        onPopupClickOutside: Type.func\n    };\n\n    static defaultProps = {\n        switcherType: 'link',\n        switcherText: 'Switcher',\n        disabled: false,\n        size: 'm'\n    };\n\n    state = {\n        opened: false,\n        switcherHovered: false,\n        popupHovered: false\n    };\n\n    popup;\n    switcher;\n\n    componentDidMount() {\n        this.popup.setTarget(this.switcher.getNode());\n    }\n\n    render(cn) {\n        return (\n            <div className={ cn }>\n                { this.renderSwitcher(cn) }\n                { this.renderPopup(cn) }\n            </div>\n        );\n    }\n\n    renderSwitcher(cn) {\n        let content = this.props.children || this.props.switcherText;\n        let opened = this.props.opened !== undefined\n            ? this.props.opened\n            : this.state.opened;\n\n        return this.props.switcherType === 'button'\n            ? this.renderSwitcherButton(cn, content, opened)\n            : this.renderSwitcherLink(cn, content);\n    }\n\n    renderSwitcherButton(cn, content, opened) {\n        return (\n            <Button\n                className={ cn('switcher') }\n                size={ this.props.size }\n                ref={ (switcher) => { this.switcher = switcher; } }\n                disabled={ this.props.disabled }\n                togglable={ this.props.togglable }\n                checked={ this.props.togglable === 'check' && opened }\n                onClick={ !this.props.disabled ? this.handleSwitcherClick : undefined }\n                onMouseEnter={ this.handleSwitcherMouseEnter }\n                onMouseLeave={ this.handleSwitcherMouseLeave }\n            >\n                { content }\n            </Button>\n        );\n    }\n\n    renderSwitcherLink(cn, content) {\n        return (\n            <Link\n                className={ cn('switcher') }\n                size={ this.props.size }\n                ref={ (switcher) => { this.switcher = switcher; } }\n                pseudo={ true }\n                onClick={ !this.props.disabled ? this.handleSwitcherClick : undefined }\n                onMouseEnter={ this.handleSwitcherMouseEnter }\n                onMouseLeave={ this.handleSwitcherMouseLeave }\n                text={ content }\n            />\n        );\n    }\n\n    renderPopup(cn) {\n        let opened = this.props.opened !== undefined\n            ? this.props.opened\n            : this.state.opened;\n\n        let popupProps = {\n            className: cn('popup'),\n            size: this.props.size,\n            autoclosable: true,\n            ...this.props.popupProps\n        };\n\n        return (\n            <Popup\n                { ...popupProps }\n                ref={ (popup) => { this.popup = popup; } }\n                visible={\n                    (!this.props.disabled && opened) ||\n                    (this.props.mode === 'hover' && (this.state.switcherHovered || this.state.popupHovered))\n                }\n                target='anchor'\n                onMouseEnter={ this.handlePopupMouseEnter }\n                onMouseLeave={ this.handlePopupMouseLeave }\n                onClickOutside={ this.handlePopupClickOutside }\n            >\n                { this.props.popupContent }\n            </Popup>\n        );\n    }\n\n    @autobind\n    handleSwitcherClick() {\n        let newOpenedStatusValue = this.props.opened !== undefined\n            ? !this.props.opened\n            : !this.state.opened;\n\n        this.setState({\n            opened: newOpenedStatusValue\n        });\n\n        if (this.props.onSwitcherClick) {\n            this.props.onSwitcherClick(newOpenedStatusValue);\n        }\n    }\n\n    @autobind\n    handleSwitcherMouseEnter() {\n        this.setState({ switcherHovered: true });\n\n        if (this.props.onSwitcherMouseEnter) {\n            this.props.onSwitcherMouseEnter();\n        }\n    }\n\n    @autobind\n    handleSwitcherMouseLeave() {\n        this.setState({ switcherHovered: false });\n\n        if (this.props.onSwitcherMouseLeave) {\n            this.props.onSwitcherMouseLeave();\n        }\n    }\n\n    @autobind\n    handlePopupMouseEnter() {\n        this.setState({ popupHovered: true });\n\n        if (this.props.onPopupMouseEnter) {\n            this.props.onPopupMouseEnter();\n        }\n    }\n\n    @autobind\n    handlePopupMouseLeave() {\n        this.setState({ popupHovered: false });\n\n        if (this.props.onPopupMouseLeave) {\n            this.props.onPopupMouseLeave();\n        }\n    }\n\n    @autobind\n    handlePopupClickOutside() {\n        this.setState({ opened: false });\n\n        if (this.props.onPopupClickOutside) {\n            this.props.onPopupClickOutside();\n        }\n    }\n}\n\nexport default Dropdown;\n"]}