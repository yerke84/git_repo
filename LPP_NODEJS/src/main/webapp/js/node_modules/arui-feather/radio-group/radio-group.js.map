{"version":3,"sources":["radio-group/radio-group.jsx"],"names":["RadioGroup","state","value","focused","cn","children","props","name","radioGroupParts","length","type","width","radios","undefined","Children","forEach","radio","index","cloneElement","ref","push","error","Boolean","checked","onChange","handleRadioChange","invalid","handleFocus","handleBlur","setState","event","onFocus","onBlur","focus","document","activeElement","blur","Component","propTypes","oneOf","string","node","oneOfType","arrayOf","theme","className","func","defaultProps"],"mappings":"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","file":"radio-group.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport createFragment from 'react-addons-create-fragment';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент группы радио-кнопок.\n */\n@cn('radio-group')\n@performance()\nclass RadioGroup extends React.Component {\n    static propTypes = {\n        /** Тип группы кнопок */\n        type: Type.oneOf(['normal', 'button', 'line']),\n        /** Значение выбранной радио-кнопки */\n        value: Type.string,\n        /** Отображение попапа с ошибкой в момент когда фокус находится на компоненте */\n        error: Type.node,\n        /** Управление шириной группы кнопок для типа 'button'. При значении 'available' растягивает группу на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Дочерние элементы `RadioGroup`, как правило, компоненты `Radio` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик фокуса радиогруппы */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса с радиогруппы */\n        onBlur: Type.func,\n        /** Обработчик изменения значения 'checked' одного из дочерних радио-кнопок */\n        onChange: Type.func\n    };\n\n    static defaultProps = {\n        type: 'normal'\n    };\n\n    state = {\n        value: '',\n        focused: false\n    };\n\n    render(cn) {\n        let children = null;\n        let props = { name: this.props.name };\n        let radioGroupParts = {};\n\n        if (this.props.children) {\n            children = this.props.children.length ? this.props.children : [this.props.children];\n        }\n\n        if (this.props.type === 'button') {\n            props = { ...props, width: this.props.width };\n        }\n\n        if (children) {\n            this.radios = [];\n\n            let value = this.props.value !== undefined\n                ? this.props.value\n                : this.state.value;\n\n            React.Children.forEach(children, (radio, index) => {\n                radioGroupParts[`radio-${index}`] = React.cloneElement(radio, {\n                    ref: radio => this.radios.push(radio),\n                    error: radio.props.error !== undefined\n                        ? radio.props.error : Boolean(this.props.error),\n                    checked: radio.props.checked !== undefined\n                        ? radio.props.checked : (value === radio.props.value),\n                    onChange: radio.props.onChange !== undefined\n                        ? radio.props.onChange : this.handleRadioChange,\n                    ...props\n                });\n            });\n        }\n        return (\n            <span\n                className={\n                    `${cn({\n                        type: this.props.type,\n                        invalid: !!this.props.error,\n                        ...props\n                    })} control-group${this.props.error ? ' control-group_invalid' : ''}`\n                }\n                role='group'\n                tabIndex='-1'\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n            >\n                { createFragment(radioGroupParts) }\n                {\n                    this.props.error &&\n                    <span className={ cn('sub') }>\n                        { this.props.error }\n                    </span>\n                }\n            </span>\n        );\n    }\n\n    @autobind\n    handleRadioChange(value) {\n        if (this.state.value !== value) {\n            this.setState({ value });\n\n            if (this.props.onChange) {\n                this.props.onChange(value);\n            }\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    /**\n     * Устанавливает фокус на первую радиокнопку в группе.\n     *\n     * @public\n     */\n    focus() {\n        if (this.radios && this.radios[0]) {\n            this.radios[0].focus();\n        }\n    }\n\n    /**\n     * Убирает фокус с группы радио-кнопок.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default RadioGroup;\n"]}