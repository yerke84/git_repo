{"version":3,"sources":["support/support.jsx"],"names":["Support","cn","props","size","city","handleCityClick","phone","handlePhoneClick","onCityClick","onPhoneClick","Component","propTypes","string","oneOf","theme","className","oneOfType","func","defaultProps"],"mappings":";;;;;;;;iEAAA;;;;AAIA;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAMMA,O,WAFL,kBAAG,SAAH,C,UACA,4B;;;;;;;;;;;+BAuBUC,E,EAAI;AACP,mBACI;AAAA;AAAA,kBAAK,WAAYA,EAAjB;AACI;AAAA;AAAA,sBAAK,WAAYA,GAAG,MAAH,CAAjB;AACI;AACI,8BAAO,KAAKC,KAAL,CAAWC,IADtB;AAEI,gCAAS,IAFb;AAGI,8BAAO,KAAKD,KAAL,CAAWE,IAHtB;AAII,iCAAU,KAAKC;AAJnB;AADJ,iBADJ;AASI;AAAA;AAAA,sBAAK,WAAYJ,GAAG,OAAH,CAAjB;AACI;AACI,8BAAO,KAAKC,KAAL,CAAWC,IADtB;AAEI,gCAAS,IAFb;AAGI,8BAAO,KAAKD,KAAL,CAAWI,KAHtB;AAII,iCAAU,KAAKC;AAJnB;AADJ;AATJ,aADJ;AAoBH;;;0CAGiB;AACd,gBAAI,KAAKL,KAAL,CAAWM,WAAf,EAA4B;AACxB,qBAAKN,KAAL,CAAWM,WAAX;AACH;AACJ;;;2CAGkB;AACf,gBAAI,KAAKN,KAAL,CAAWO,YAAf,EAA6B;AACzB,qBAAKP,KAAL,CAAWO,YAAX;AACH;AACJ;;;;EAzDiB,gBAAMC,S,WACjBC,S,GAAY;AACf;AACAP,UAAM,oBAAKQ,MAFI;AAGf;AACAN,WAAO,oBAAKM,MAJG;AAKf;AACAT,UAAM,oBAAKU,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CANS;AAOf;AACAC,WAAO,oBAAKD,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CARQ;AASf;AACAE,eAAW,oBAAKC,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKL,MAAjB,CAAf,CAVI;AAWf;AACAJ,iBAAa,oBAAKS,IAZH;AAaf;AACAR,kBAAc,oBAAKQ;AAdJ,C,UAiBZC,Y,GAAe;AAClBf,UAAM;AADY,C;kBA0CXH,O","file":"support.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Link from '../link/link';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент с информацией о поддержке для клиентов.\n * Включает в себя город и телефон.\n */\n@cn('support')\n@performance()\nclass Support extends React.Component {\n    static propTypes = {\n        /** Название города */\n        city: Type.string,\n        /** Номер телефона */\n        phone: Type.string,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик клика по городу */\n        onCityClick: Type.func,\n        /** Обработчик клика по телефону */\n        onPhoneClick: Type.func\n    };\n\n    static defaultProps = {\n        size: 'm'\n    };\n\n    render(cn) {\n        return (\n            <div className={ cn }>\n                <div className={ cn('city') }>\n                    <Link\n                        size={ this.props.size }\n                        pseudo={ true }\n                        text={ this.props.city }\n                        onClick={ this.handleCityClick }\n                    />\n                </div>\n                <div className={ cn('phone') }>\n                    <Link\n                        size={ this.props.size }\n                        pseudo={ true }\n                        text={ this.props.phone }\n                        onClick={ this.handlePhoneClick }\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    @autobind\n    handleCityClick() {\n        if (this.props.onCityClick) {\n            this.props.onCityClick();\n        }\n    }\n\n    @autobind\n    handlePhoneClick() {\n        if (this.props.onPhoneClick) {\n            this.props.onPhoneClick();\n        }\n    }\n}\n\nexport default Support;\n"]}