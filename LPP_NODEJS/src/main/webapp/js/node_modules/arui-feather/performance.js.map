{"version":3,"sources":["performance.js"],"names":["isEqual","performance","hasOwnProperty","Object","prototype","objA","objB","deep","is","keysA","keys","keysB","length","bHasOwnProperty","bind","key","pop","a","b","shallow","nextProps","nextState","nextContext","props","state","context","useDeep","target","shouldComponentUpdate"],"mappings":";;;;;;;;QAcgBA,O,GAAAA,O;kBAwFQC,W;AAtGxB;;;;AAIA,IAAMC,iBAAiBC,OAAOC,SAAP,CAAiBF,cAAxC;;AAEA;;;;;;;;AAQO,SAASF,OAAT,CAAiBK,IAAjB,EAAuBC,IAAvB,EAA2C;AAAA,QAAdC,IAAc,uEAAP,KAAO;;AAC9C,QAAIJ,OAAOK,EAAP,CAAUH,IAAV,EAAgBC,IAAhB,CAAJ,EAA2B;AACvB,eAAO,IAAP;AACH;;AAED,QAAI,QAAOD,IAAP,yCAAOA,IAAP,OAAgB,QAAhB,IAA4BA,SAAS,IAArC,IAA6C,QAAOC,IAAP,yCAAOA,IAAP,OAAgB,QAA7D,IAAyEA,SAAS,IAAtF,EAA4F;AACxF,eAAO,KAAP;AACH;;AAED,QAAID,KAAKD,SAAL,KAAmBE,KAAKF,SAA5B,EAAuC;AACnC,eAAO,KAAP;AACH;;AAED,QAAMK,QAAQN,OAAOO,IAAP,CAAYL,IAAZ,CAAd;AACA,QAAMM,QAAQR,OAAOO,IAAP,CAAYJ,IAAZ,CAAd;;AAEA,QAAIG,MAAMG,MAAN,KAAiBD,MAAMC,MAA3B,EAAmC;AAC/B,eAAO,KAAP;AACH;;AAED,QAAMC,kBAAkBX,eAAeY,IAAf,CAAoBR,IAApB,CAAxB;AACA,WAAOG,MAAMG,MAAN,GAAe,CAAtB,EAAyB;AACrB,YAAMG,MAAMN,MAAMO,GAAN,EAAZ;;AAEA,YAAI,CAACH,gBAAgBE,GAAhB,CAAL,EAA2B;AACvB,mBAAO,KAAP;AACH;;AAED,YAAME,IAAIZ,KAAKU,GAAL,CAAV;AACA,YAAMG,IAAIZ,KAAKS,GAAL,CAAV;;AAEA,YAAI,CAACZ,OAAOK,EAAP,CAAUS,CAAV,EAAaC,CAAb,CAAL,EAAsB;AAClB,gBAAI,CAACX,IAAD,IAAS,QAAOU,CAAP,yCAAOA,CAAP,OAAa,QAAtB,IAAkC,QAAOC,CAAP,yCAAOA,CAAP,OAAa,QAA/C,IAA2DD,MAAM,IAAjE,IAAyEC,MAAM,IAAnF,EAAyF;AACrF,uBAAO,KAAP;AACH;;AAED,gBAAI,CAAClB,QAAQiB,CAAR,EAAWC,CAAX,EAAcX,IAAd,CAAL,EAA0B;AACtB,uBAAO,KAAP;AACH;AACJ;AACJ;;AAED,WAAO,IAAP;AACH;;AAED;;;;;;;;AAQA,SAASY,OAAT,CAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,WAAvC,EAAoD;AAChD,WAAO,CAACtB,QAAQ,KAAKuB,KAAb,EAAoBH,SAApB,CAAD,IACA,CAACpB,QAAQ,KAAKwB,KAAb,EAAoBH,SAApB,CADD,IAEA,CAACrB,QAAQ,KAAKyB,OAAb,EAAsBH,WAAtB,CAFR;AAGH;;AAED;;;;;;;;;AASA,SAASf,IAAT,CAAca,SAAd,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiD;AAC7C,WAAO,CAACtB,QAAQ,KAAKuB,KAAb,EAAoBH,SAApB,EAA+B,IAA/B,CAAD,IACA,CAACpB,QAAQ,KAAKwB,KAAb,EAAoBH,SAApB,EAA+B,IAA/B,CADD,IAEA,CAACrB,QAAQ,KAAKyB,OAAb,EAAsBH,WAAtB,EAAmC,IAAnC,CAFR;AAGH;;AAED;;;;;;;;;;;;;;AAce,SAASrB,WAAT,GAAsC;AAAA,QAAjByB,OAAiB,uEAAP,KAAO;;AACjD,WAAO,UAAUC,MAAV,EAAkB;AACrBA,eAAOvB,SAAP,CAAiBwB,qBAAjB,GAAyCF,UAAUnB,IAAV,GAAiBY,OAA1D;AACH,KAFD;AAGH","file":"performance.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Функции проверки равенства двух объектов.\n *\n * @param {*} objA Первый объект\n * @param {*} objB Второй объект\n * @param {Boolean} [deep=false] Запускать ли глубокую проверку равенства\n * @returns {Boolean}\n */\nexport function isEqual(objA, objB, deep = false) {\n    if (Object.is(objA, objB)) {\n        return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n        return false;\n    }\n\n    if (objA.prototype !== objB.prototype) {\n        return false;\n    }\n\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    const bHasOwnProperty = hasOwnProperty.bind(objB);\n    while (keysA.length > 0) {\n        const key = keysA.pop();\n\n        if (!bHasOwnProperty(key)) {\n            return false;\n        }\n\n        const a = objA[key];\n        const b = objB[key];\n\n        if (!Object.is(a, b)) {\n            if (!deep || typeof a !== 'object' || typeof b !== 'object' || a === null || b === null) {\n                return false;\n            }\n\n            if (!isEqual(a, b, deep)) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * \"Поверхностная\" проверка равенства props и state компонента.\n *\n * @param {*} nextProps next component props\n * @param {*} nextState next component state\n * @param {*} nextContext next component context\n * @returns {Boolean}\n */\nfunction shallow(nextProps, nextState, nextContext) {\n    return !isEqual(this.props, nextProps)\n        || !isEqual(this.state, nextState)\n        || !isEqual(this.context, nextContext);\n}\n\n/**\n * Запускает глубокую проверку равенства props и state компонента.\n * Глубокая проверка менее производительна, но позволяет проверять равенство массивов и объектов.\n *\n * @param {*} nextProps next component props\n * @param {*} nextState next component state\n * @param {*} nextContext next component context\n * @returns {Boolean}\n */\nfunction deep(nextProps, nextState, nextContext) {\n    return !isEqual(this.props, nextProps, true)\n        || !isEqual(this.state, nextState, true)\n        || !isEqual(this.context, nextContext, true);\n}\n\n/**\n * Декоратор для улучшения производительности React компонентов. Работает за счет реализации метода\n * [shouldComponentUpdate](https://facebook.github.io/react/docs/advanced-performance.html#avoiding-reconciling-the-dom).\n *\n * У декоратора есть два режима работы - глубокая и \"поверхностная\" проверка. В случае, если все props и state\n * компонента состоит только из примитивных значений (`number`, `string`, `null`, `undefined`) стоит использовать\n * поверхностную проверку, которая будет проверять простое равенство значений в `props` и `state`.\n\n * В случае, если props или state компонентов имеют сложную структуру (массивы, объекты) необходимо использовать\n * глубокую проверку.\n *\n * @param {Boolean} [useDeep=false] Использовать глубокую проверку равенства\n * @returns {Function}\n */\nexport default function performance(useDeep = false) {\n    return function (target) {\n        target.prototype.shouldComponentUpdate = useDeep ? deep : shallow;\n    };\n}\n"]}