{"version":3,"sources":["user/user.jsx"],"names":["User","cn","icon","props","undefined","text","url","handleClick","event","onClick","Component","propTypes","className","oneOfType","func","string","node","theme","oneOf","defaultProps"],"mappings":";;;;;;;;iEAAA;;;;AAIA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAKMA,I,WAFL,kBAAG,MAAH,C,UACA,4B;;;;;;;;;;;+BAqBUC,E,EAAI;AACP,gBAAIC,OAAO,KAAKC,KAAL,CAAWD,IAAX,KAAoBE,SAApB,GACL,KAAKD,KAAL,CAAWD,IADN,GAEL,gDAAM,WAAYD,GAAG,MAAH,CAAlB,EAA+B,MAAK,GAApC,EAAwC,MAAK,MAA7C,GAFN;;AAIA,mBACI;AACI,2BAAYA,EADhB;AAEI,sBAAOC,IAFX;AAGI,sBAAO,KAAKC,KAAL,CAAWE,IAHtB;AAII,qBAAM,KAAKF,KAAL,CAAWG,GAJrB;AAKI,yBAAU,KAAKC;AALnB,cADJ;AASH;;;oCAGWC,K,EAAO;AACf,gBAAI,KAAKL,KAAL,CAAWM,OAAf,EAAwB;AACpB,qBAAKN,KAAL,CAAWM,OAAX,CAAmBD,KAAnB;AACH;AACJ;;;;EAzCc,gBAAME,S,WACdC,S,GAAY;AACf;AACAC,eAAW,oBAAKC,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKC,MAAjB,CAAf,CAFI;AAGf;AACAb,UAAM,oBAAKc,IAJI;AAKf;AACAX,UAAM,oBAAKU,MANI;AAOf;AACAE,WAAO,oBAAKC,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CARQ;AASf;AACAZ,SAAK,oBAAKS,MAVK;AAWf;AACAN,aAAS,oBAAKK;AAZC,C,UAeZK,Y,GAAe;AAClBb,SAAK;AADa,C;kBA4BXN,I","file":"user.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Icon from '../icon/icon';\nimport Link from '../link/link';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент доступа к пользовательскому профилю: cодержит имя пользователя и кнопку \"Выйти\".\n */\n@cn('user')\n@performance()\nclass User extends React.Component {\n    static propTypes = {\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Иконка пользователя */\n        icon: Type.node,\n        /** Имя пользователя */\n        text: Type.string,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** href ссылки с именем пользователя */\n        url: Type.string,\n        /** Обработчик клика по пользователю */\n        onClick: Type.func\n    };\n\n    static defaultProps = {\n        url: '#'\n    };\n\n    render(cn) {\n        let icon = this.props.icon !== undefined\n            ? this.props.icon\n            : <Icon className={ cn('icon') } size='s' icon='user' />;\n\n        return (\n            <Link\n                className={ cn }\n                icon={ icon }\n                text={ this.props.text }\n                url={ this.props.url }\n                onClick={ this.handleClick }\n            />\n        );\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n}\n\nexport default User;\n"]}