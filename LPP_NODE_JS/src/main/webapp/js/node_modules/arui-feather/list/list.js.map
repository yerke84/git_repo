{"version":3,"sources":["list/list.jsx"],"names":["List","cn","listElement","props","type","listContent","items","map","item","key","value","listProps","className","createElement","Component","propTypes","arrayOf","shape","string","isRequired","node","oneOf","theme","oneOfType","func"],"mappings":";;;;;;;;yCAAA;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA;;;IAKMA,I,WAFL,kBAAG,MAAH,C,UACA,2BAAY,IAAZ,C;;;;;;;;;;;+BAkBUC,E,EAAI;AACP,gBAAIC,cAAgB,KAAKC,KAAL,CAAWC,IAAX,KAAoB,SAArB,GAAkC,IAAlC,GAAyC,IAA5D;;AAEA,gBAAIC,cAAc,CAAC,KAAKF,KAAL,CAAWG,KAAX,IAAoB,EAArB,EAAyBC,GAAzB,CAA6B;AAAA,uBAC3C;AAAA;AAAA;AACI,uCAAcC,KAAKC,GADvB;AAEI,mCAAYR,GAAG,MAAH;AAFhB;AAIMO,yBAAKE;AAJX,iBAD2C;AAAA,aAA7B,CAAlB;;AASA,gBAAIC,YAAY;AACZC,2BAAWX,GAAG;AACVG,0BAAM,KAAKD,KAAL,CAAWC;AADP,iBAAH;AADC,aAAhB;;AAMA,mBAAO,gBAAMS,aAAN,CACHX,WADG,EAEHS,SAFG,EAGHN,WAHG,CAAP;AAKH;;;;EAxCc,gBAAMS,S,WACdC,S,GAAY;AACf;AACAT,WAAO,oBAAKU,OAAL,CAAa,oBAAKC,KAAL,CAAW;AAC3B;AACAR,aAAK,oBAAKS,MAAL,CAAYC,UAFU;AAG3B;AACAT,eAAO,oBAAKU,IAAL,CAAUD;AAJU,KAAX,CAAb,CAFQ;AAQf;AACAf,UAAM,oBAAKiB,KAAL,CAAW,CAAC,SAAD,EAAY,SAAZ,CAAX,CATS;AAUf;AACAC,WAAO,oBAAKD,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAXQ;AAYf;AACAT,eAAW,oBAAKW,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKN,MAAjB,CAAf;AAbI,C;kBA0CRlB,I","file":"list.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент списка.\n */\n@cn('list')\n@performance(true)\nclass List extends React.Component {\n    static propTypes = {\n        /** Список элементов */\n        items: Type.arrayOf(Type.shape({\n            /** Уникальный ключ элемента */\n            key: Type.string.isRequired,\n            /** Содержание элемента */\n            value: Type.node.isRequired\n        })),\n        /** Тип списка */\n        type: Type.oneOf(['default', 'ordered']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string])\n    };\n\n    render(cn) {\n        let listElement = ((this.props.type !== 'ordered') ? 'ul' : 'ol');\n\n        let listContent = (this.props.items || []).map(item => (\n            <li\n                key={ `item-${item.key}` }\n                className={ cn('item') }\n            >\n                { item.value }\n            </li>\n        ));\n\n        let listProps = {\n            className: cn({\n                type: this.props.type\n            })\n        };\n\n        return React.createElement(\n            listElement,\n            listProps,\n            listContent\n        );\n    }\n}\n\nexport default List;\n"]}