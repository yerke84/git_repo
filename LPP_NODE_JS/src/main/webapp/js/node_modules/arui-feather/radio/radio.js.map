{"version":3,"sources":["radio/radio.jsx"],"names":["Radio","state","focused","hovered","checked","cn","props","undefined","size","disabled","invalid","error","width","type","id","tabIndex","handleFocus","handleBlur","handleMouseEnter","handleMouseLeave","label","renderButtonRadio","renderNormalRadio","name","value","control","handleChange","text","nextCheckedValue","setState","onChange","event","target","onFocus","onBlur","onMouseEnter","onMouseLeave","focus","document","activeElement","blur","elementRect","getBoundingClientRect","targetY","top","window","pageYOffset","Component","propTypes","oneOf","bool","string","node","number","theme","className","oneOfType","func","defaultProps"],"mappings":"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","file":"radio.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Button from '../button/button';\n\nimport cn from '../cn';\nimport performance from '../performance';\nimport scrollTo from '../lib/scroll-to';\nimport { SCROLL_TO_CORRECTION } from '../vars';\n\n/**\n * Компонент радио-кнопки.\n */\n@cn('radio')\n@performance()\nclass Radio extends React.Component {\n    static propTypes = {\n        /** Тип */\n        type: Type.oneOf(['normal', 'button']),\n        /** Управление состоянием вкл/выкл компонента */\n        checked: Type.bool,\n        /** Управление возможностью изменения состояние 'checked' компонента */\n        disabled: Type.bool,\n        /** Уникальный идентификатор блока */\n        id: Type.string,\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Значение радио-кнопки, которое будет отправлено на сервер, если она выбрана */\n        value: Type.string,\n        /** Текст подписи к радио-кнопке */\n        text: Type.node,\n        /** Управление шириной кнопки для типа 'button'. При значении 'available' растягивает кнопку на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Отображение в состоянии ошибки */\n        error: Type.bool,\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик изменения значения 'checked' компонента, принимает на вход isChecked и value компонента */\n        onChange: Type.func,\n        /** Обработчик фокуса комнонента */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса с компонента */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на радио-кнопку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с радио-кнопки */\n        onMouseLeave: Type.func\n    };\n\n    static defaultProps = {\n        size: 'm',\n        tabIndex: 0\n    };\n\n    state = {\n        focused: false,\n        hovered: false,\n        checked: false\n    };\n\n    label;\n    control;\n\n    render(cn) {\n        let checked = this.props.checked !== undefined\n            ? this.props.checked\n            : this.state.checked;\n\n        return (\n            <label\n                className={ cn({\n                    size: this.props.size,\n                    disabled: this.props.disabled,\n                    checked,\n                    focused: this.state.focused,\n                    hovered: this.state.hovered,\n                    invalid: !!this.props.error,\n                    width: this.props.type === 'button' ? this.props.width : null\n                }) }\n                htmlFor={ this.props.id }\n                tabIndex={ this.props.tabIndex }\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                ref={ (label) => { this.label = label; } }\n            >\n                {\n                    this.props.type === 'button'\n                    ? this.renderButtonRadio(cn, checked)\n                    : this.renderNormalRadio(cn, checked)\n                }\n            </label>\n        );\n    }\n\n    renderNormalRadio(cn, checked) {\n        return (\n            <div>\n                <span className={ cn('box') }>\n                    <input\n                        checked={ checked }\n                        disabled={ this.props.disabled }\n                        name={ this.props.name }\n                        id={ this.props.id }\n                        value={ this.props.value }\n                        autoComplete='off'\n                        tabIndex='-1'\n                        type='radio'\n                        className={ cn('control') }\n                        ref={ (control) => { this.control = control; } }\n                        onChange={ this.handleChange }\n                    />\n                </span>\n                {\n                    this.props.text &&\n                    <span\n                        className={ cn('text') }\n                        role='presentation'\n                    >\n                        { this.props.text }\n                    </span>\n                }\n            </div>\n        );\n    }\n\n    renderButtonRadio(cn, checked) {\n        return (\n            <div>\n                <Button\n                    togglable='check'\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    size={ this.props.size }\n                    width={ this.props.width }\n                    focused={ this.state.focused }\n                    hovered={ this.state.hovered }\n                    tabIndex={ -1 }\n                    view={ checked ? 'action' : undefined }\n                    onClick={ this.handleChange }\n                >\n                    {\n                        this.props.text\n                            ? this.props.text\n                            : ''\n                    }\n                </Button>\n                <input\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    name={ this.props.name }\n                    id={ this.props.id }\n                    value={ this.props.value }\n                    autoComplete='off'\n                    tabIndex={ -1 }\n                    type='radio'\n                    className={ cn('control') }\n                    onChange={ this.handleChange }\n                    ref={ (control) => { this.control = control; } }\n                />\n            </div>\n        );\n    }\n\n    @autobind\n    handleChange() {\n        if (!this.props.disabled) {\n            let nextCheckedValue = !(\n                this.props.checked !== undefined\n                    ? this.props.checked\n                    : this.state.checked\n            );\n\n            this.setState({ checked: nextCheckedValue });\n\n            if (this.props.onChange) {\n                this.props.onChange(this.props.value, nextCheckedValue);\n            }\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        if (!this.props.disabled) {\n            this.setState({ focused: true });\n        }\n\n        event.target.value = this.props.value;\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        if (!this.props.disabled) {\n            this.setState({ focused: false });\n        }\n\n        event.target.value = this.props.value;\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    /**\n     * Устанавливает фокус на радио-кнопку.\n     *\n     * @public\n     */\n    focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с радио-кнопки.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n\n    /**\n     * Скроллит страницу до радио-кнопки.\n     *\n     * @public\n     */\n    scrollTo() {\n        let elementRect = this.label.getBoundingClientRect();\n\n        scrollTo({\n            targetY: (elementRect.top + window.pageYOffset) - SCROLL_TO_CORRECTION\n        });\n    }\n}\n\nexport default Radio;\n"]}