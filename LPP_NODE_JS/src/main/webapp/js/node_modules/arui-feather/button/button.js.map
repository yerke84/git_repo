{"version":3,"sources":["button/button.jsx"],"names":["Button","state","focused","hovered","pressed","nextProps","disabled","setState","cn","buttonElement","props","tag","buttonProps","ref","control","role","id","name","type","title","tabIndex","className","pseudo","view","size","width","undefined","togglable","checked","onClick","handleClick","onFocus","handleFocus","onBlur","handleBlur","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","buttonContent","leftAddons","icon","children","text","rightAddons","createElement","event","which","ENTER","SPACE","focus","document","activeElement","blur","Component","propTypes","node","oneOf","bool","string","number","oneOfType","arrayOf","theme","func","defaultProps"],"mappings":"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","file":"button.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport keyboardCode from '../lib/keyboard-code';\nimport performance from '../performance';\n\n/**\n * Компонент кнопки (да, она нажимается!).\n */\n@cn('button')\n@performance()\nclass Button extends React.Component {\n    static propTypes = {\n        /** Текст кнопки */\n        text: Type.node,\n        /** Иконка кнопки */\n        icon: Type.node,\n        /** Список произвольных элементов в левом слоте */\n        rightAddons: Type.node,\n        /** Список произвольных элементов в правом слоте */\n        leftAddons: Type.node,\n        /** Тип кнопки */\n        view: Type.oneOf(['default', 'action', 'extra', 'other']),\n        /** Поведение кнопки */\n        type: Type.oneOf(['button', 'reset', 'submit']),\n        /** HTML элемент, которым будет компонент в DOM */\n        tag: Type.oneOf(['button', 'span']),\n        /** Управление шириной кнопки. При значении 'available' растягивает кнопку на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Управление возможности взаимодействия с компонентом */\n        disabled: Type.bool,\n        /** Отображение кнопки в состоянии фокуса */\n        focused: Type.bool,\n        /** Псевдо представление кнопки */\n        pseudo: Type.bool,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Имя компонента в DOM */\n        name: Type.string,\n        /** Текст всплывающей подсказки */\n        title: Type.string,\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Тип переключателя */\n        togglable: Type.oneOf(['check', 'radio']),\n        /** Отображение кнопки в отмеченном (зажатом) состоянии */\n        checked: Type.bool,\n        /** Дочерние элементы `Button` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Обработчик клика по кнопке */\n        onClick: Type.func,\n        /** Обработчик фокуса кнопки */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса кнопки */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на кнопку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с кнопки */\n        onMouseLeave: Type.func,\n        /** Обработчик события нажатия кнопки мыши в момент */\n        onMouseDown: Type.func,\n        /** Обработчик события отжатия кнопки мыши в момент */\n        onMouseUp: Type.func,\n        /** Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте */\n        onKeyDown: Type.func,\n        /** Обработчик события отжатия на клавишу клавиатуры в момент, когда фокус находится на компоненте */\n        onKeyUp: Type.func\n    };\n\n    static defaultProps = {\n        type: 'button',\n        tag: 'button',\n        size: 'm'\n    };\n\n    state = {\n        focused: false,\n        hovered: false,\n        pressed: false\n    };\n\n    /**\n     * @type {HTMLButtonElement|HTMLSpanElement}\n     */\n    control;\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.disabled) {\n            this.setState({\n                hovered: false,\n                focused: false\n            });\n        }\n    }\n\n    render(cn) {\n        let buttonElement = this.props.tag === 'span' ? 'span' : 'button';\n\n        let buttonProps = {\n            ref: (control) => { this.control = control; },\n            role: 'button',\n            id: this.props.id,\n            name: this.props.name,\n            type: this.props.type,\n            title: this.props.title,\n            tabIndex: this.props.tabIndex,\n            disabled: this.props.disabled,\n            className: cn({\n                disabled: this.props.disabled,\n                pseudo: this.props.pseudo,\n                view: this.props.view,\n                size: this.props.size,\n                width: this.props.width,\n                focused: this.props.focused !== undefined ? this.props.focused : this.state.focused,\n                hovered: this.state.hovered,\n                pressed: this.state.pressed,\n                togglable: this.props.togglable,\n                checked: this.props.checked\n            }),\n            onClick: this.handleClick,\n            onFocus: this.handleFocus,\n            onBlur: this.handleBlur,\n            onMouseEnter: this.handleMouseEnter,\n            onMouseLeave: this.handleMouseLeave,\n            onMouseDown: this.handleMouseDown,\n            onMouseUp: this.handleMouseUp,\n            onKeyDown: this.handleKeyDown,\n            onKeyUp: this.handleKeyUp\n        };\n\n        let buttonContent = [\n            this.props.leftAddons && <span key={ 'left-addons' }>\n                { this.props.leftAddons }\n            </span>,\n            this.props.icon && <span key={ 'icon' } className={ cn('icon') }>\n                { this.props.icon }\n            </span>,\n            (this.props.children || this.props.text) &&\n            <span key={ 'text' } className={ cn('text') }>\n                { this.props.children || this.props.text }\n            </span>,\n            this.props.rightAddons && <span key={ 'right-addons' }>\n                { this.props.rightAddons }\n            </span>\n        ];\n\n        return React.createElement(buttonElement,\n            buttonProps,\n            buttonContent\n        );\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        if (!this.props.disabled) {\n            this.setState({ hovered: true });\n        }\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        if (!this.props.disabled) {\n            this.setState({ hovered: false });\n        }\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    @autobind\n    handleMouseDown(event) {\n        if (!this.props.disabled) {\n            this.setState({ pressed: true });\n        }\n\n        if (this.props.onMouseDown) {\n            this.props.onMouseDown(event);\n        }\n    }\n\n    @autobind\n    handleMouseUp(event) {\n        if (!this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onMouseUp) {\n            this.props.onMouseUp(event);\n        }\n    }\n\n    @autobind\n    handleKeyDown(event) {\n        if ((event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) && !this.props.disabled) {\n            this.setState({ pressed: true });\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n\n    @autobind\n    handleKeyUp(event) {\n        if ((event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) && !this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp(event);\n        }\n    }\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.control;\n    }\n\n    /**\n     * Устанавливает фокус на поле ввода.\n     *\n     * @public\n     */\n    focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с поля ввода.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default Button;\n"]}