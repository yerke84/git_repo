declare module 'arui-feather/popup' {
    import { Component, ReactNode } from 'react';

    export interface PopupProps {

        /**
         * Дополнительный класс
         */
        className?: Function | string;
        /**
         * Дочерние элементы `Popup`
         */
        children?: Array<ReactNode> | ReactNode;
        /**
         * Тип попапа
         */
        type?: 'default' | 'tooltip';
        /**
         * Подстраивание высоты попапа под край окна ('adaptive'), занятие попапом всей возможной высоты ('available'), 'default'
         */
        height?: 'default' | 'available' | 'adaptive';
        /**
         * Только для target='anchor', расположение (в порядке приоритета) относительно точки открытия. Первым указывается главное направление, через дефис - второстепенное направление
         */
        directions?: Array<'anchor' | 'top-left' | 'top-center' | 'top-right' | 'left-top' | 'left-center' | 'left-bottom' | 'right-top' | 'right-center' | 'right-bottom' | 'bottom-left' | 'bottom-center' | 'bottom-right'>;
        /**
         * Привязка компонента к другому элементу на странице, или его расположение независимо от остальных: 'anchor', 'position'
         */
        target?: 'anchor' | 'position';
        /**
         * Только для target='anchor'. Смещение в пикселях всплывающего окна относительно основного направления
         */
        mainOffset?: number;
        /**
         * Только для target='anchor'. Смещение в пикселях всплывающего окна относительно второстепенного направления
         */
        secondaryOffset?: number;
        /**
         * Только для target='anchor'. Минимально допустимое смещение в пикселях всплывающего окна от края его контейнера
         */
        fitContaiterOffset?: number;
        /**
         * Отображение попапа как сообщения об ошибке
         */
        invalid?: boolean;
        /**
         * Управление видимостью компонента
         */
        visible?: boolean;
        /**
         * Управление возможностью автозакрытия компонента
         */
        autoclosable?: boolean;
        /**
         * Управление выставлением модификатора для добавления внутренних отступов в стилях
         */
        padded?: boolean;
        /**
         * Размер компонента
         */
        size?: 's' | 'm' | 'l' | 'xl';
        /**
         * Тема компонента
         */
        theme?: 'alfa-on-color' | 'alfa-on-white';
        /**
         * Обработчик события наведения курсора на попап
         */
        onMouseEnter?: Function;
        /**
         * Обработчик события снятия курсора с попапа
         */
        onMouseLeave?: Function;
        /**
         * Обработчик клика вне компонента
         */
        onClickOutside?: Function;
        /**
         * Минимальная ширина попапа
         */
        minWidth?: number;
        /**
         * Максимальная ширина попапа
         */
        maxWidth?: number;
        /**
         * Указатель на родительский элемент
         */
        for?: string;
    }


    /**
     * Компонент popup'а.
     */
    export default class Popup extends Component<PopupProps, any> {

        /**
         * Задает элемент, к которому будет привязан popup.
         */
        setTarget(target: any): any;
        /**
         * Задает положение popup.
         */
        setPosition(left: any, top: any): any;
        /**
         * Возвращает внутренний DOM узел.
         */
        getInnerNode(): any;
    }
}