{"version":3,"sources":["popup/popup.jsx"],"names":["Popup","state","direction","hasScrollbar","hovered","receivedContainer","styles","top","left","height","gradientStyles","right","anchor","clickEventBindTimeout","domElemPopup","domElemPopupContent","isWindowClickBinded","position","handleResizeWindow","isPropsToPositionCorrect","redraw","context","isInCustomContainer","renderContainerElement","positioningContainerElement","setState","props","autoclosable","ensureClickEvent","setGradientStyles","window","addEventListener","nextProps","nextContext","visible","prevProps","onClickOutside","removeEventListener","cn","isContainerReady","getRenderContainer","popup","for","type","target","size","invalid","padded","minWidth","getMinWidth","maxWidth","getMaxWidth","handleMouseEnter","handleMouseLeave","inner","handleInnerScroll","content","children","handleResize","event","scrollTop","offsetHeight","scrollHeight","isBottomReached","Math","round","onMouseEnter","onMouseLeave","Error","popupHash","getPopupHash","bestDrawingParams","overflow","getDrawingCss","isDestroy","isNeedBindEvent","undefined","clearTimeout","setTimeout","handleWindowClick","drawingParams","directions","bestDirection","isHeightAdaptive","isHeightAvailable","isTargetAnchor","isHaveTooltip","width","offsetWidth","contentWidth","contentHeight","offset","main","mainOffset","second","secondaryOffset","fitContainer","fitContaiterOffset","targetPosition","targetAnchor","getPositioningContainer","Component","propTypes","className","oneOfType","func","string","arrayOf","node","oneOf","number","bool","theme","defaultProps","contextTypes"],"mappings":"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","file":"popup.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport debounce from 'lodash.debounce';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport RenderInContainer from '../render-in-container/render-in-container';\nimport ResizeSensor from '../resize-sensor/resize-sensor';\n\nimport { calcBestDrawingParams, calcTargetDimensions, calcFitContainerDimensions } from './calc-drawing-params';\nimport cn from '../cn';\nimport getScrollbarWidth from '../lib/scrollbar-width';\nimport { HtmlElement } from '../lib/prop-types';\nimport { isNodeOutsideElement } from '../lib/window';\nimport performance from '../performance';\n\n/**\n * @typedef {Object} Point\n * @property {Number} left Координата по оси x\n * @property {Number} top Координата по оси y\n */\n\n/**\n * @typedef {Object} PopupOffsetCollection\n * @property {Number} main Смещение в пикселях всплывающего окна относительно основного направления\n * @property {Number} second Смещение в пикселях всплывающего окна относительно второстепенного направления\n * @property {Number} viewport Минимально допустимое смещение в пикселях всплывающего окна от края окна браузера\n */\n\n/**\n * @typedef {Object} PopupHash\n * @property {Array.<String>} directions Список возмножных расположений попапа\n * @property {String} bestDirection Приоритетное расположение\n * @property {Boolean} isHeightAdaptive Подстраивается ли высота попапа под край окна\n * @property {Boolean} isHeightAvailable Занимает ли попап всю возможную высоту\n * @property {Boolean} isTargetAnchor Привязал ли попап к другому элементу\n * @property {Boolean} isHaveTooltip Имеет ли попап тип \"tooltip\"\n * @property {Number} width Ширина попапа\n * @property {Number} height Высота попапа\n * @property {Number} contentWidth Ширина контента в попапе\n * @property {Number} contentHeight Высота контента в попапе\n * @property {PopupOffsetCollection} offset Список смещений попапа\n * @property {Point} targetPosition Координаты точки привязки попапа\n * @property {HTMLElement} targetAnchor Объект элемента, к которому привязан попап, в DOM дереве\n */\n\n/**\n * Компонент popup'а.\n */\n@cn('popup')\n@performance(true)\nclass Popup extends React.Component {\n    static propTypes = {\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Дочерние элементы `Popup` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тип попапа */\n        type: Type.oneOf(['default', 'tooltip']),\n        /** Подстраивание высоты попапа под край окна ('adaptive'), занятие попапом всей возможной высоты ('available'), 'default' */\n        height: Type.oneOf(['default', 'available', 'adaptive']),\n        /** Только для target='anchor', расположение (в порядке приоритета) относительно точки открытия. Первым указывается главное направление, через дефис - второстепенное направление */\n        directions: Type.arrayOf(Type.oneOf([\n            'anchor', 'top-left', 'top-center', 'top-right', 'left-top', 'left-center', 'left-bottom', 'right-top',\n            'right-center', 'right-bottom', 'bottom-left', 'bottom-center', 'bottom-right'\n        ])),\n        /** Привязка компонента к другому элементу на странице, или его расположение независимо от остальных: 'anchor', 'position' */\n        target: Type.oneOf(['anchor', 'position']),\n        /** Только для target='anchor'. Смещение в пикселях всплывающего окна относительно основного направления */\n        mainOffset: Type.number,\n        /** Только для target='anchor'. Смещение в пикселях всплывающего окна относительно второстепенного направления */\n        secondaryOffset: Type.number,\n        /** Только для target='anchor'. Минимально допустимое смещение в пикселях всплывающего окна от края его контейнера */\n        fitContaiterOffset: Type.number,\n        /** Отображение попапа как сообщения об ошибке */\n        invalid: Type.bool,\n        /** Управление видимостью компонента */\n        visible: Type.bool,\n        /** Управление возможностью автозакрытия компонента */\n        autoclosable: Type.bool,\n        /** Управление выставлением модификатора для добавления внутренних отступов в стилях */\n        padded: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Обработчик события наведения курсора на попап */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с попапа */\n        onMouseLeave: Type.func,\n        /** Обработчик клика вне компонента */\n        onClickOutside: Type.func,\n        /** Минимальная ширина попапа */\n        minWidth: Type.number,\n        /** Максимальная ширина попапа */\n        maxWidth: Type.number,\n        /** Указатель на родительский элемент */\n        for: Type.string\n    };\n\n    static defaultProps = {\n        invalid: false,\n        visible: false,\n        autoclosable: false,\n        padded: true,\n        secondaryOffset: 0,\n        fitContaiterOffset: 0,\n        target: 'anchor',\n        size: 's'\n    };\n\n    static contextTypes = {\n        isInCustomContainer: Type.bool,\n        renderContainerElement: HtmlElement,\n        positioningContainerElement: HtmlElement\n    };\n\n    state = {\n        direction: null,\n        hasScrollbar: false,\n        hovered: false,\n        receivedContainer: false,\n        styles: {\n            top: 0,\n            left: 0,\n            height: 'auto'\n        },\n        gradientStyles: {\n            right: 0\n        }\n    };\n\n    anchor = null;\n    clickEventBindTimeout = null;\n    domElemPopup = null;\n    domElemPopupContent = null;\n    isWindowClickBinded = false;\n    position = null;\n\n    popup;\n    inner;\n    content;\n\n    handleResizeWindow = debounce(() => {\n        if (this.isPropsToPositionCorrect()) {\n            this.redraw();\n        }\n    }, 200);\n\n    componentWillMount() {\n        if (this.context.isInCustomContainer\n            && this.context.renderContainerElement\n            && this.context.positioningContainerElement) {\n            this.setState({\n                receivedContainer: true\n            });\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.autoclosable) {\n            this.ensureClickEvent();\n        }\n\n        if (this.props.height === 'adaptive') {\n            this.setGradientStyles();\n        }\n\n        window.addEventListener('resize', this.handleResizeWindow);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (!this.state.receivedContainer\n            && nextContext.renderContainerElement\n            && nextContext.positioningContainerElement) {\n            this.setState({\n                receivedContainer: true\n            }, () => {\n                if (this.props.visible) {\n                    this.redraw();\n                }\n            });\n\n            return;\n        }\n\n        if (nextProps.visible !== this.props.visible) {\n            this.redraw();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.autoclosable) {\n            if (prevProps.onClickOutside !== this.props.onClickOutside) {\n                this.ensureClickEvent();\n            } else if (prevProps.visible !== this.props.visible) {\n                this.ensureClickEvent(!this.props.visible);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.autoclosable) {\n            this.ensureClickEvent(true);\n        }\n\n        window.removeEventListener('resize', this.handleResizeWindow);\n    }\n\n    render(cn) {\n        if (!this.isContainerReady()) {\n            return false;\n        }\n\n        return (\n            <RenderInContainer container={ this.getRenderContainer() }>\n                <div\n                    ref={ (popup) => { this.popup = popup; } }\n                    data-for={ this.props.for }\n                    className={ cn({\n                        direction: this.state.direction,\n                        type: (this.props.target === 'anchor') && (this.props.type === 'tooltip') && this.props.type,\n                        size: this.props.size,\n                        visible: this.props.visible,\n                        invalid: this.props.invalid,\n                        height: this.props.height,\n                        hovered: this.state.hovered,\n                        autoclosable: this.props.autoclosable,\n                        padded: this.props.padded\n                    }) }\n                    style={ {\n                        ...this.state.styles,\n                        minWidth: this.getMinWidth(),\n                        maxWidth: this.getMaxWidth()\n                    } }\n                    onMouseEnter={ this.handleMouseEnter }\n                    onMouseLeave={ this.handleMouseLeave }\n                >\n                    <div\n                        ref={ (inner) => { this.inner = inner; } }\n                        className={ cn('inner') }\n                        onScroll={ this.handleInnerScroll }\n                    >\n                        <div className={ cn('content') } ref={ (content) => { this.content = content; } }>\n                            { this.props.children }\n                            <ResizeSensor onResize={ this.handleResize } />\n                        </div>\n                    </div>\n                    {\n                        this.state.hasScrollbar && (\n                            <div className={ cn('gradient') } style={ this.state.gradientStyles } />\n                        )\n                    }\n                </div>\n            </RenderInContainer>\n        );\n    }\n\n    @autobind\n    handleInnerScroll(event) {\n        let { scrollTop, offsetHeight, scrollHeight } = event.target;\n        let isBottomReached = Math.round(scrollTop) + offsetHeight === scrollHeight;\n\n        if (this.props.height === 'adaptive') {\n            let gradientStyles = {\n                right: this.state.gradientStyles.right\n            };\n\n            if (isBottomReached) {\n                gradientStyles.height = 0;\n            }\n\n            this.setState({\n                gradientStyles\n            });\n        }\n    }\n\n    @autobind\n    handleMouseEnter() {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter();\n        }\n    }\n\n    @autobind\n    handleMouseLeave() {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave();\n        }\n    }\n\n    @autobind\n    handleWindowClick(event) {\n        if (this.props.autoclosable && !!this.domElemPopup && isNodeOutsideElement(event.target, this.domElemPopup)) {\n            if (this.props.onClickOutside) {\n                this.props.onClickOutside(event);\n            }\n        }\n    }\n\n    @autobind\n    handleResize() {\n        if (!this.props.visible) {\n            return;\n        }\n\n        this.redraw();\n    }\n\n    /**\n     * Задает элемент, к которому будет привязан popup.\n     *\n     * @public\n     * @param {HTMLElement} target Элемент, к которому будет привязан popup\n     */\n    setTarget(target) {\n        if (this.anchor === target) {\n            return;\n        }\n\n        this.anchor = target;\n        this.redraw();\n    }\n\n    /**\n     * Задает положение popup.\n     *\n     * @public\n     * @param {Number} left x-coordinate\n     * @param {Number} top y-coordinate\n     */\n    setPosition(left, top) {\n        this.position = { left, top };\n        this.redraw();\n    }\n\n    /**\n     * Возвращает внутренний DOM узел.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getInnerNode() {\n        return this.inner;\n    }\n\n    /**\n     * Возвращает контейнер, в котором отрендерится попап.\n     *\n     * @returns {HTMLElement}\n     */\n    getRenderContainer() {\n        if (!this.context.isInCustomContainer) {\n            return null;\n        }\n\n        return this.context.renderContainerElement;\n    }\n\n    /**\n     * Возвращает контейнер, внутрь которого надо вписать элемент.\n     *\n     * @returns {HTMLElement}\n     */\n    getPositioningContainer() {\n        if (!this.context.isInCustomContainer) {\n            return null;\n        }\n\n        return this.context.positioningContainerElement;\n    }\n\n    /**\n     * Возвращает `true`, если контейнер, в котором должен быть отрисован\n     * `Popup` уже находится в DOM. Для `Popup` без кастомного контейнера\n     * роль контейнера выполняет `document.body` и этот для них этот метод\n     * всегда вернете `true`.\n     *\n     * @returns {Boolean}\n     */\n    isContainerReady() {\n        if (!this.context.isInCustomContainer) {\n            return true;\n        }\n\n        return (\n            this.context.isInCustomContainer && this.state.receivedContainer\n        );\n    }\n\n    /**\n     * Возвращает `true`, если все необходимые для расчета положения `Popup`\n     * внешние props заданы.\n     *\n     * @returns {Boolean}\n     */\n    isPropsToPositionCorrect() {\n        return (this.props.target === 'anchor' && this.anchor) || (this.props.target === 'position' && this.position);\n    }\n\n    @autobind\n    redraw() {\n        if (!this.isContainerReady()) {\n            return;\n        }\n\n        if (!this.isPropsToPositionCorrect()) {\n            throw new Error('Cannot show popup without target or position');\n        }\n\n        if (!this.domElemPopup) {\n            this.domElemPopup = this.popup;\n            this.domElemPopupContent = this.content;\n        }\n\n        let popupHash = this.getPopupHash();\n        let bestDrawingParams = this.props.target === 'position'\n            ? { top: this.position.top, left: this.position.left }\n            : calcBestDrawingParams(popupHash, calcTargetDimensions(popupHash), calcFitContainerDimensions(popupHash));\n\n        this.setState({\n            direction: bestDrawingParams.direction,\n            hasScrollbar: bestDrawingParams.overflow,\n            styles: this.getDrawingCss(bestDrawingParams)\n        });\n    }\n\n    ensureClickEvent(isDestroy) {\n        let isNeedBindEvent = isDestroy !== undefined ? !isDestroy : this.props.visible;\n\n        // We need timeouts to not to catch the event that causes\n        // popup opening (because it propagates to the `window`).\n        if (this.clickEventBindTimeout) {\n            clearTimeout(this.clickEventBindTimeout);\n            this.clickEventBindTimeout = null;\n        }\n\n        this.clickEventBindTimeout = setTimeout(() => {\n            if (!this.isWindowClickBinded && isNeedBindEvent) {\n                window.addEventListener('click', this.handleWindowClick);\n                this.isWindowClickBinded = true;\n            } else if (this.isWindowClickBinded && !isNeedBindEvent) {\n                window.removeEventListener('click', this.handleWindowClick);\n                this.isWindowClickBinded = false;\n            }\n        }, 0);\n    }\n\n    getDrawingCss(drawingParams) {\n        return {\n            top: drawingParams.top,\n            left: drawingParams.left,\n            height: this.props.height === 'adaptive' ? drawingParams.height : 'auto'\n        };\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getMinWidth() {\n        return this.props.minWidth !== undefined ? this.props.minWidth : 0;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getMaxWidth() {\n        return this.props.maxWidth !== undefined ? this.props.maxWidth : 'none';\n    }\n\n    /**\n     * Get collection of popup properties.\n     *\n     * @returns {PopupHash}\n     */\n    getPopupHash() {\n        return {\n            directions: this.props.directions,\n            bestDirection: this.state.direction,\n            isHeightAdaptive: this.props.height === 'adaptive',\n            isHeightAvailable: this.props.height === 'available',\n            isTargetAnchor: this.props.target === 'anchor',\n            isHaveTooltip: this.props.type === 'tooltip',\n            width: this.domElemPopup.offsetWidth,\n            height: this.domElemPopup.offsetHeight,\n            contentWidth: this.domElemPopupContent.offsetWidth,\n            contentHeight: this.domElemPopupContent.offsetHeight,\n            offset: {\n                main: this.props.mainOffset,\n                second: this.props.secondaryOffset,\n                fitContainer: this.props.fitContaiterOffset\n            },\n            targetPosition: this.position,\n            targetAnchor: this.anchor,\n            fitContainer: this.getPositioningContainer()\n        };\n    }\n\n    setGradientStyles() {\n        this.setState({\n            gradientStyles: {\n                right: getScrollbarWidth()\n            }\n        });\n    }\n}\n\nexport default Popup;\n"]}