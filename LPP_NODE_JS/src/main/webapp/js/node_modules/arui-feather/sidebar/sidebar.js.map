{"version":3,"sources":["sidebar/sidebar.jsx"],"names":["setBodyClass","visible","document","body","classList","Sidebar","props","nextProps","cn","hasCloser","children","handleCloserClick","onCloserClick","Component","propTypes","theme","oneOf","className","oneOfType","func","string","arrayOf","node","bool","isRequired","defaultProps"],"mappings":";;;;;;;;iEAAA;;;;AAIA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;AAMA,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAC3BC,aAASC,IAAT,CAAcC,SAAd,CAAwBH,UAAU,KAAV,GAAkB,QAA1C,EAAoD,iBAApD;AACH;;AAED;;;IAKMI,O,WAFL,kBAAG,SAAH,C,UACA,4B;;;;;;;;;;;4CAqBuB;AAChBL,yBAAa,KAAKM,KAAL,CAAWL,OAAxB;AACH;;;kDAEyBM,S,EAAW;AACjCP,yBAAaO,UAAUN,OAAvB;AACH;;;+CAEsB;AACnBD,yBAAa,KAAb;AACH;;;+BAEMQ,E,EAAI;AAAA,yBACkC,KAAKF,KADvC;AAAA,gBACCG,SADD,UACCA,SADD;AAAA,gBACYC,QADZ,UACYA,QADZ;AAAA,gBACsBT,OADtB,UACsBA,OADtB;;;AAGP,mBACI;AAAA;AAAA,kBAAwB,WAAYO,GAAG,EAAEP,gBAAF,EAAH,CAApC;AACI;AAAA;AAAA;AAEQQ,iCACA;AAAA;AAAA;AACI,uCAAYD,GAAG,QAAH,CADhB;AAEI,qCAAU,KAAKG;AAFnB;AAII;AACI,kCAAK,OADT;AAEI,kCAAK;AAFT;AAJJ,qBAHR;AAaI;AAAA;AAAA,0BAAK,WAAYH,GAAG,SAAH,CAAjB;AACME;AADN;AAbJ;AADJ,aADJ;AAqBH;;;4CAGmB;AAChB,gBAAI,KAAKJ,KAAL,CAAWM,aAAf,EAA8B;AAC1B,qBAAKN,KAAL,CAAWM,aAAX;AACH;AACJ;;;;EA/DiB,gBAAMC,S,WACjBC,S,GAAY;AACf;AACAC,WAAO,oBAAKC,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAFQ;AAGf;AACAC,eAAW,oBAAKC,SAAL,CAAe,CAAC,oBAAKC,IAAN,EAAY,oBAAKC,MAAjB,CAAf,CAJI;AAKf;AACAV,cAAU,oBAAKQ,SAAL,CAAe,CAAC,oBAAKG,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CANK;AAOf;AACAb,eAAW,oBAAKc,IARD;AASf;AACAtB,aAAS,oBAAKsB,IAAL,CAAUC,UAVJ;AAWf;AACAZ,mBAAe,oBAAKO;AAZL,C,UAeZM,Y,GAAe;AAClBhB,eAAW;AADO,C;kBAkDXJ,O","file":"sidebar.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Icon from '../icon/icon';\nimport PopupContainerProvider from '../popup-container-provider/popup-container-provider';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Изменяет класс для body. Нужен для управления скроллом\n * основного экрана при показе холодильника.\n *\n * @param {Boolean} visible Признак видимости сайдбара.\n */\nfunction setBodyClass(visible) {\n    document.body.classList[visible ? 'add' : 'remove']('sidebar-visible');\n}\n\n/**\n * Компонент боковой панели aka холодильник.\n */\n@cn('sidebar')\n@performance()\nclass Sidebar extends React.Component {\n    static propTypes = {\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.oneOfType([Type.func, Type.string]),\n        /** Дочерние компоненты */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Признак для отрисовки элемента закрытия */\n        hasCloser: Type.bool,\n        /** Признак появления холодильника */\n        visible: Type.bool.isRequired,\n        /** Обработчик клика на элемент закрытия */\n        onCloserClick: Type.func\n    };\n\n    static defaultProps = {\n        hasCloser: true\n    };\n\n    componentDidMount() {\n        setBodyClass(this.props.visible);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        setBodyClass(nextProps.visible);\n    }\n\n    componentWillUnmount() {\n        setBodyClass(false);\n    }\n\n    render(cn) {\n        const { hasCloser, children, visible } = this.props;\n\n        return (\n            <PopupContainerProvider className={ cn({ visible }) }>\n                <div>\n                    {\n                        hasCloser &&\n                        <button\n                            className={ cn('closer') }\n                            onClick={ this.handleCloserClick }\n                        >\n                            <Icon\n                                icon='close'\n                                size='xl'\n                            />\n                        </button>\n                    }\n                    <div className={ cn('content') }>\n                        { children }\n                    </div>\n                </div>\n            </PopupContainerProvider>\n        );\n    }\n\n    @autobind\n    handleCloserClick() {\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick();\n        }\n    }\n}\n\nexport default Sidebar;\n"]}