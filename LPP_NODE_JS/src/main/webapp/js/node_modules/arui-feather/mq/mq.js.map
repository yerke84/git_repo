{"version":3,"sources":["mq/mq.jsx"],"names":["IS_BROWSER","window","SUPPORTS_TOUCH","pointerevents","touchevents","pool","refCounters","getMatchMedia","queryProp","query","matchMedia","releaseMatchMedia","Mq","state","isMatched","mql","props","addListener","handleMatch","removeListener","children","queryPass","touchPass","matches","touch","setState","onMatchChange","Component","propTypes","string","bool","oneOfType","arrayOf","node","func"],"mappings":";;;;;;;;4CAAA;;;;AAIA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,OAAOC,MAAP,KAAkB,WAArC;AACA,IAAMC,iBAAiBF,eAAe,oBAAUG,aAAV,IAA2B,oBAAUC,WAApD,CAAvB;;AAEA,IAAIC,OAAO,EAAX;AACA,IAAIC,cAAc,EAAlB;;AAEA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAC9B,QAAIC,QAAQ,aAAOD,SAAP,KAAqBA,SAAjC;;AAEA,QAAI,CAACH,KAAKI,KAAL,CAAL,EAAkB;AACdJ,aAAKI,KAAL,IAAcR,OAAOS,UAAP,CAAkBD,KAAlB,CAAd;AACAH,oBAAYG,KAAZ,IAAqB,CAArB;AACH,KAHD,MAGO;AACHH,oBAAYG,KAAZ,KAAsB,CAAtB;AACH;;AAED,WAAOJ,KAAKI,KAAL,CAAP;AACH;;AAED,SAASE,iBAAT,CAA2BH,SAA3B,EAAsC;AAClC,QAAIC,QAAQ,aAAOD,SAAP,KAAqBA,SAAjC;;AAEAF,gBAAYG,KAAZ,KAAsB,CAAtB;;AAEA,QAAIJ,KAAKI,KAAL,KAAeH,YAAYG,KAAZ,MAAuB,CAA1C,EAA6C;AACzC,eAAOJ,KAAKI,KAAL,CAAP;AACA,eAAOH,YAAYG,KAAZ,CAAP;AACH;AACJ;;AAED;;;;;;;IAOMG,E;;;;;;;;;;;;;;kLAYFC,K,GAAQ;AACJC,uBAAW;AADP,S,QAIRC,G,GAAM,I;;;;;4CAEc;AAChB,iBAAKA,GAAL,GAAWR,cAAc,KAAKS,KAAL,CAAWP,KAAzB,CAAX;AACA,iBAAKM,GAAL,CAASE,WAAT,CAAqB,KAAKC,WAA1B;AACA,iBAAKA,WAAL,CAAiB,KAAKH,GAAtB;AACH;;;+CAEsB;AACnBJ,8BAAkB,KAAKK,KAAL,CAAWP,KAA7B;AACA,iBAAKM,GAAL,CAASI,cAAT,CAAwB,KAAKD,WAA7B;AACA,iBAAKH,GAAL,GAAW,IAAX;AACH;;;iCAEQ;AACL,gBAAI,CAAC,KAAKC,KAAL,CAAWI,QAAZ,IAAwB,CAACpB,UAAzB,IAAuC,CAAC,KAAKa,KAAL,CAAWC,SAAvD,EAAkE,OAAO,KAAP;;AAElE,mBAAO,KAAKE,KAAL,CAAWI,QAAlB;AACH;;AAED;;;;;;oCAIYL,G,EAAK;AAAA;;AACb,gBAAIM,YAAY,IAAhB;AACA,gBAAIC,YAAY,IAAhB;;AAEA,gBAAI,KAAKN,KAAL,CAAWP,KAAf,EAAsB;AAClBY,4BAAYN,IAAIQ,OAAhB;AACH;AACD,gBAAI,KAAKP,KAAL,CAAWQ,KAAf,EAAsB;AAClBF,4BAAYpB,cAAZ;AACH,aAFD,MAEO,IAAI,KAAKc,KAAL,CAAWQ,KAAX,KAAqB,KAAzB,EAAgC;AACnCF,4BAAY,CAACpB,cAAb;AACH;;AAED,iBAAKuB,QAAL,CAAc;AACVX,2BAAYO,aAAaC;AADf,aAAd,EAEG,YAAM;AACL,oBAAI,OAAKN,KAAL,CAAWU,aAAf,EAA8B;AAC1B,2BAAKV,KAAL,CAAWU,aAAX,CAAyB,OAAKb,KAAL,CAAWC,SAApC;AACH;AACJ,aAND;AAOH;;;;EA5DY,gBAAMa,S,WACZC,S,GAAY;AACf;AACAnB,WAAO,oBAAKoB,MAFG;AAGf;AACAL,WAAO,oBAAKM,IAJG;AAKf;AACAV,cAAU,oBAAKW,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CANK;AAOf;AACAP,mBAAe,oBAAKQ;AARL,C;kBA8DRtB,E","file":"mq.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Modernizr from '../modernizr';\nimport MqList from './mq.json';\n\nconst IS_BROWSER = typeof window !== 'undefined';\nconst SUPPORTS_TOUCH = IS_BROWSER && (Modernizr.pointerevents || Modernizr.touchevents);\n\nlet pool = {};\nlet refCounters = {};\n\nfunction getMatchMedia(queryProp) {\n    let query = MqList[queryProp] || queryProp;\n\n    if (!pool[query]) {\n        pool[query] = window.matchMedia(query);\n        refCounters[query] = 1;\n    } else {\n        refCounters[query] += 1;\n    }\n\n    return pool[query];\n}\n\nfunction releaseMatchMedia(queryProp) {\n    let query = MqList[queryProp] || queryProp;\n\n    refCounters[query] -= 1;\n\n    if (pool[query] && refCounters[query] === 0) {\n        delete pool[query];\n        delete refCounters[query];\n    }\n}\n\n/**\n * Компонент, имплементирующий поддержку медиа запросов в шаблонах.\n * Рендерит внутренние компоненты/разметку исходя из соответствия условиям запроса.\n * Для `query` используется window.matchMedia с полифиллом для IE9.\n * Можно использовать кастомные запросы из `src/mq/mq.json`, например `--small`.\n * Пока браузеры не поддерживают CSS4 Media Queries, поддержка тач-событий определяется через `touch`.\n */\nclass Mq extends React.Component {\n    static propTypes = {\n        /** Медиа запрос */\n        query: Type.string,\n        /** Запрос на поддержку тач-событий */\n        touch: Type.bool,\n        /** Дочерние элементы `Mq` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Обработчик изменений в совпадении запросов */\n        onMatchChange: Type.func\n    };\n\n    state = {\n        isMatched: false\n    };\n\n    mql = null;\n\n    componentDidMount() {\n        this.mql = getMatchMedia(this.props.query);\n        this.mql.addListener(this.handleMatch);\n        this.handleMatch(this.mql);\n    }\n\n    componentWillUnmount() {\n        releaseMatchMedia(this.props.query);\n        this.mql.removeListener(this.handleMatch);\n        this.mql = null;\n    }\n\n    render() {\n        if (!this.props.children || !IS_BROWSER || !this.state.isMatched) return false;\n\n        return this.props.children;\n    }\n\n    /**\n     * @param {Object} [mql] MediaQueryList или MediaQueryListEvent\n     */\n    @autobind\n    handleMatch(mql) {\n        let queryPass = true;\n        let touchPass = true;\n\n        if (this.props.query) {\n            queryPass = mql.matches;\n        }\n        if (this.props.touch) {\n            touchPass = SUPPORTS_TOUCH;\n        } else if (this.props.touch === false) {\n            touchPass = !SUPPORTS_TOUCH;\n        }\n\n        this.setState({\n            isMatched: (queryPass && touchPass)\n        }, () => {\n            if (this.props.onMatchChange) {\n                this.props.onMatchChange(this.state.isMatched);\n            }\n        });\n    }\n}\n\nexport default Mq;\n"]}